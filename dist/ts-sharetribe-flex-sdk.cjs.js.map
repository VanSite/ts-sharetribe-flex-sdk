{"version":3,"file":"ts-sharetribe-flex-sdk.cjs.js","mappings":"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","sources":["webpack://@vansite/ts-sharetribe-flex-sdk/webpack/bootstrap","webpack://@vansite/ts-sharetribe-flex-sdk/webpack/runtime/define property getters","webpack://@vansite/ts-sharetribe-flex-sdk/webpack/runtime/hasOwnProperty shorthand","webpack://@vansite/ts-sharetribe-flex-sdk/webpack/runtime/make namespace object","webpack://@vansite/ts-sharetribe-flex-sdk/./src/utils/apis.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/helpers/bind.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/utils.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/core/AxiosError.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/helpers/toFormData.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/helpers/AxiosURLSearchParams.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/helpers/buildURL.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/core/InterceptorManager.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/defaults/transitional.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/platform/browser/index.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/platform/browser/classes/FormData.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/platform/browser/classes/Blob.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/platform/common/utils.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/platform/index.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/helpers/formDataToJSON.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/defaults/index.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/helpers/toURLEncodedForm.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/helpers/parseHeaders.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/core/AxiosHeaders.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/core/transformData.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/cancel/isCancel.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/cancel/CanceledError.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/core/settle.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/helpers/speedometer.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/helpers/progressEventReducer.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/helpers/throttle.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/helpers/cookies.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/core/buildFullPath.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/helpers/combineURLs.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/core/mergeConfig.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/helpers/resolveConfig.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/adapters/xhr.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/helpers/parseProtocol.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/helpers/composeSignals.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/helpers/trackStream.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/adapters/fetch.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/adapters/adapters.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/helpers/null.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/core/dispatchRequest.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/env/data.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/helpers/validator.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/core/Axios.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/cancel/CancelToken.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/helpers/HttpStatusCode.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/axios.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/helpers/spread.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/axios/lib/helpers/isAxiosError.js","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/auth/index.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/marketplace/AvailabilityExceptions.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/marketplace/Listings.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/marketplace/Bookings.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/marketplace/CurrentUser.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/marketplace/Images.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/marketplace/Marketplace.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/marketplace/Messages.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/marketplace/OwnListings.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/marketplace/PasswordReset.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/marketplace/ProcessTransitions.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/marketplace/Reviews.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/marketplace/Stock.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/marketplace/StockAdjustments.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/marketplace/StripeAccount.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/marketplace/StripeAccountLinks.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/marketplace/StripeCustomer.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/marketplace/StripePersons.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/marketplace/StripeSetupIntents.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/marketplace/TimeSlots.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/marketplace/Transactions.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/marketplace/Users.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/marketplace/index.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/uuid/dist/esm-browser/native.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/uuid/dist/esm-browser/rng.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/uuid/dist/esm-browser/v4.js","webpack://@vansite/ts-sharetribe-flex-sdk/./src/sdkTypes/UUID.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/sdkTypes/LatLng.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/sdkTypes/LatLngBounds.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/utils/parameter-serializer.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/sdkTypes/Money.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/utils/convert-types.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/utils/prepare-axios-instance.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/assets/index.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/utils/stores/memory-store.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/utils/config.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/sdk.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/integrationApi/AvailabilityExceptions.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/integrationApi/Events.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/integrationApi/Images.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/integrationApi/Listings.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/integrationApi/Marketplace.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/integrationApi/Stock.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/integrationApi/StockAdjustments.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/integrationApi/StockReservation.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/integrationApi/Transactions.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/integrationApi/Users.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/endpoints/integrationApi/index.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/integrationSdk.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./node_modules/js-cookie/dist/js.cookie.mjs","webpack://@vansite/ts-sharetribe-flex-sdk/./src/utils/stores/store.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/index.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/sdkTypes/BigDecimal.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/utils/stores/browser-store.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/utils/stores/express-store.ts","webpack://@vansite/ts-sharetribe-flex-sdk/./src/utils/util.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { ApiConfigs } from '../types/apiConfigs';\n\n/**\n * Creates API configurations for the SDK.\n *\n * @param isIntegrationSdk - Determines whether the configuration is for the Integration SDK (default: false).\n * @returns An object containing API configurations for the standard SDK or Integration SDK.\n */\nexport const createApisConfigs = <I extends boolean = false>(isIntegrationSdk: I = false as I): ApiConfigs<I> => {\n  if (isIntegrationSdk === false) {\n    return {\n      api: ({ baseUrl, version, transitVerbose }) => ({\n        headers: {\n          ...(transitVerbose ? { 'X-Transit-Verbose': 'true' } : {}),\n          Accept: 'application/transit+json',\n        },\n        baseUrl: `${baseUrl}/${version}/api`,\n      }),\n      auth: ({ baseUrl, version }) => ({\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          Accept: 'application/json',\n        },\n        baseUrl: `${baseUrl}/${version}/auth`,\n      }),\n      assets: ({ assetCdnBaseUrl, version }) => ({\n        headers: {\n          Accept: 'application/json',\n        },\n        baseUrl: `${assetCdnBaseUrl}/${version}/assets`,\n      }),\n    } as ApiConfigs<I>;\n  } else {\n    return {\n      auth: ({ baseUrl, version }) => ({\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          Accept: 'application/json',\n        },\n        baseUrl: `${baseUrl}/${version}/auth`,\n      }),\n      integrationApi: ({ baseUrl, version, transitVerbose }) => ({\n        headers: {\n          ...(transitVerbose ? { 'X-Transit-Verbose': 'true' } : {}),\n          Accept: 'application/transit+json',\n        },\n        baseUrl: `${baseUrl}/${version}/integration_api`,\n      }),\n    } as ApiConfigs<I>;\n  }\n};\n","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?(object|Function)} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  if (utils.isFunction(options)) {\n    options = {\n      serialize: options\n    };\n  } \n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv,\n  _navigator as navigator,\n  origin\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data) ||\n      utils.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils.isHeaders(header)) {\n      for (const [key, value] of header.entries()) {\n        setHeader(value, key, rewrite);\n      }\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","import speedometer from \"./speedometer.js\";\nimport throttle from \"./throttle.js\";\nimport utils from \"../utils.js\";\n\nexport const progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n}\n\nexport const progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n}\n\nexport const asyncDecorator = (fn) => (...args) => utils.asap(() => fn(...args));\n","/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn.apply(null, args);\n  }\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs)\n        }, threshold - passed);\n      }\n    }\n  }\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\nexport default throttle;\n","import platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ? ((origin, isMSIE) => (url) => {\n  url = new URL(url, platform.origin);\n\n  return (\n    origin.protocol === url.protocol &&\n    origin.host === url.host &&\n    (isMSIE || origin.port === url.port)\n  );\n})(\n  new URL(platform.origin),\n  platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent)\n) : () => true;\n","import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, prop, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, prop , caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, prop , caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, prop , caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b , prop) => mergeDeepProperties(headersToObject(a), headersToObject(b),prop, true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport isURLSameOrigin from \"./isURLSameOrigin.js\";\nimport cookies from \"./cookies.js\";\nimport buildFullPath from \"../core/buildFullPath.js\";\nimport mergeConfig from \"../core/mergeConfig.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport buildURL from \"./buildURL.js\";\n\nexport default (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n}\n\n","import utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport {progressEventReducer} from '../helpers/progressEventReducer.js';\nimport resolveConfig from \"../helpers/resolveConfig.js\";\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","import CanceledError from \"../cancel/CanceledError.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport utils from '../utils.js';\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n      }\n    }\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT))\n    }, timeout)\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    }\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => utils.asap(unsubscribe);\n\n    return signal;\n  }\n}\n\nexport default composeSignals;\n","\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n}\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport {trackStream} from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n}\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => utils.isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils.isSpecCompliantForm(body)) {\n    const _request = new Request(platform.origin, {\n      method: 'POST',\n      body,\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n\n  if(utils.isArrayBufferView(body) || utils.isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(utils.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\nexport default isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n  let request;\n\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n  });\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = progressEventDecorator(\n          requestContentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress))\n        );\n\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n\n    if (!utils.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n\n    let response = await fetch(request);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n        responseContentLength,\n        progressEventReducer(asyncDecorator(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          unsubscribe && unsubscribe();\n        }),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && unsubscribe && unsubscribe();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    unsubscribe && unsubscribe();\n\n    if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\n\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport fetchAdapter from './fetch.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","export const VERSION = \"1.7.9\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\nvalidators.spelling = function spelling(correctSpelling) {\n  return (value, opt) => {\n    // eslint-disable-next-line no-console\n    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);\n    return true;\n  }\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy = {};\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    validator.assertOptions(config, {\n      baseUrl: validators.spelling('baseURL'),\n      withXsrfToken: validators.spelling('withXSRFToken')\n    }, true);\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","/**\n * @fileoverview Provides the AuthenticationApi class for interacting with the Sharetribe Authentication API.\n * This class includes methods to obtain and manage access tokens for authenticating requests to the Marketplace API and Integration API.\n *\n * For more information, refer to the Authentication API reference:\n * https://www.sharetribe.com/api-reference/authentication.html\n */\n\nimport { AuthWithIdpParameter, Endpoint, RevokeResponse, ScopeType, TokenResponse } from '../../types/authentication';\nimport {AxiosInstance, AxiosResponse} from 'axios';\nimport SharetribeSdk from '../../sdk';\nimport IntegrationSdk from \"../../integrationSdk\";\n\n/**\n * Class representing the Authentication API for obtaining and managing access tokens.\n *\n * The Authentication API follows the OAuth2 framework and supports various grant types to issue tokens for authenticating requests.\n *\n * @see https://www.sharetribe.com/api-reference/authentication.html\n */\nclass AuthenticationApi {\n  private readonly endpoint: string;\n  private readonly headers: Record<string, string>;\n  private axios: AxiosInstance;\n\n  /**\n   * Creates an instance of AuthenticationApi.\n   *\n   * @param {SharetribeSdk | IntegrationSdk} sdk - The Sharetribe SDK or Integration SDK instance for configuration and request handling.\n   */\n  constructor(sdk: SharetribeSdk | IntegrationSdk) {\n    const config = sdk.apisConfigs.auth(sdk.sdkConfig);\n    this.endpoint = config.baseUrl;\n    this.headers = config.headers;\n    this.axios = sdk.axios;\n  }\n\n  /**\n   * Obtains an access token using the specified grant type and parameters.\n   *\n   * @template S\n   * @param {Endpoint<S>} params - Parameters including grant type and necessary credentials.\n   * @returns {Promise<TokenResponse<S>>} - A promise resolving to the token response.\n   */\n  async token<S extends ScopeType>(params: Endpoint<S>): Promise<AxiosResponse<TokenResponse<S>>> {\n    return this.axios.post<TokenResponse<S>>(`${this.endpoint}/token`, params, {  // Replace `any` with the actual type\n      headers: this.headers,\n    });\n  }\n\n  /**\n   * Authenticates a user using an external identity provider (IdP) and obtains an access token.\n   *\n   * @param {AuthWithIdpParameter} params - Parameters including IdP token and provider details.\n   * @returns {Promise<TokenResponse<'user'>>} - A promise resolving to the token response.\n   */\n  async authWithIdp<P extends AuthWithIdpParameter>(params: P): Promise<AxiosResponse<TokenResponse<\"user\">>> {  // Replace `any` with the actual type\n    return this.axios.post<TokenResponse<\"user\">>(`${this.endpoint}/auth_with_idp`, params, {\n      headers: this.headers\n    });\n  }\n\n  /**\n   * Revokes a refresh token, effectively invalidating any associated access tokens.\n   *\n   * @param {string} token - The refresh token to be revoked.\n   * @returns {Promise<RevokeResponse>} - A promise resolving to the revoke response.\n   */\n  async revoke(token: string): Promise<AxiosResponse<RevokeResponse>> {  // Replace `any` with the actual type\n    return this.axios.post<RevokeResponse>(`${this.endpoint}/revoke`, {token}, {\n      headers: this.headers,\n    });\n  }\n\n  /**\n   * Retrieves details about the current access token.\n   *\n   * @returns {Promise<TokenResponse<'details'>>} - A promise resolving to the token details response.\n   */\n  async details(): Promise<AxiosResponse<TokenResponse<'details'>>> {\n    return this.axios.get<TokenResponse<'details'>>(`${this.endpoint}/details`, {\n      headers: this.headers,\n    });\n  }\n\n}\n\nexport default AuthenticationApi;","/**\n * @fileoverview Provides the AvailabilityExceptions class for managing availability exceptions in the Sharetribe Marketplace API.\n * This class allows querying, creating, and deleting availability exceptions for listings.\n *\n * For more details, refer to the Marketplace API documentation:\n * https://www.sharetribe.com/api-reference/marketplace.html#availability-exceptions\n */\n\nimport { AxiosInstance, AxiosResponse } from 'axios';\nimport MarketplaceApi from './index';\nimport {\n  AvailabilityExceptionsCreateParameter,\n  AvailabilityExceptionsDeleteParameter,\n  AvailabilityExceptionsQueryParameter,\n  AvailabilityExceptionsResponse,\n} from '../../types/marketplace/availabilityExceptions';\nimport { ExtraParameter } from '../../types/sharetribe';\n\n/**\n * Class representing the AvailabilityExceptions API.\n *\n * The AvailabilityExceptions API provides methods to manage availability exceptions for listings, such as querying existing exceptions, creating new ones, and deleting them.\n */\nclass AvailabilityExceptions {\n  private readonly endpoint: string;\n  private readonly axios: AxiosInstance;\n  private readonly headers: Record<string, string>;\n  public readonly authRequired = true;\n\n  /**\n   * Creates an instance of the AvailabilityExceptions class.\n   *\n   * @param {MarketplaceApi} api - The Marketplace API instance providing configuration and request handling.\n   */\n  constructor(api: MarketplaceApi) {\n    this.endpoint = api.endpoint + '/availability_exceptions';\n    this.axios = api.axios;\n    this.headers = api.headers;\n  }\n\n  /**\n   * Queries availability exceptions based on specified filters.\n   *\n   * @template P\n   * @param {P & AvailabilityExceptionsQueryParameter} params - Query parameters to filter availability exceptions.\n   * @returns {Promise<AxiosResponse<AvailabilityExceptionsResponse<'query', P>>>} - A promise resolving to the query results.\n   *\n   * @example\n   * const response = await sdk.availabilityExceptions.query({\n   *   listingId: 'listing-id',\n   *   start: '2024-12-01T00:00:00Z',\n   *   end: '2024-12-31T23:59:59Z',\n   * });\n   *\n   * const exceptions = response.data;\n   */\n  async query<P extends AvailabilityExceptionsQueryParameter>(\n    params: P\n  ): Promise<AxiosResponse<AvailabilityExceptionsResponse<'query', P>>> {\n    return this.axios.get<AvailabilityExceptionsResponse<'query', P>>(`${this.endpoint}/query`, {\n      headers: this.headers,\n      params,\n    });\n  }\n\n  /**\n   * Creates a new availability exception for a listing.\n   *\n   * @template P\n   * @template EP\n   * @param {P & AvailabilityExceptionsCreateParameter} params - Parameters for the new availability exception.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<AvailabilityExceptionsResponse<'create', P, EP>>>} - A promise resolving to the created availability exception.\n   *\n   * @example\n   * const response = await sdk.availabilityExceptions.create({\n   *   listingId: 'listing-id',\n   *   start: '2024-12-25T00:00:00Z',\n   *   end: '2024-12-25T23:59:59Z',\n   *   seats: 0,\n   * });\n   *\n   * const newException = response.data;\n   */\n  async create<P extends AvailabilityExceptionsCreateParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams?: EP\n  ): Promise<AxiosResponse<AvailabilityExceptionsResponse<'create', P, EP>>> {\n    return this.axios.post<AvailabilityExceptionsResponse<'create', P, EP>>(\n      `${this.endpoint}/create`,\n      { ...params, ...extraParams },\n      { headers: this.headers }\n    );\n  }\n\n  /**\n   * Deletes an existing availability exception.\n   *\n   * @template P\n   * @template EP\n   * @param {P & AvailabilityExceptionsDeleteParameter} params - Parameters to identify the availability exception to delete.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<AvailabilityExceptionsResponse<'delete', P>>>} - A promise resolving to the deletion result.\n   *\n   * @example\n   * const response = await sdk.availabilityExceptions.delete({\n   *   id: 'exception-id',\n   * });\n   *\n   * const deletionResult = response.data;\n   */\n  async delete<P extends AvailabilityExceptionsDeleteParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams?: EP\n  ): Promise<AxiosResponse<AvailabilityExceptionsResponse<'delete', P, EP>>> {\n    return this.axios.post<AvailabilityExceptionsResponse<'delete', P, EP>>(\n      `${this.endpoint}/delete`,\n      { ...params, ...extraParams },\n      { headers: this.headers }\n    );\n  }\n}\n\nexport default AvailabilityExceptions;\n","/**\n * @fileoverview Provides the Listings class for managing listings in the Sharetribe Marketplace API.\n * This class allows querying and retrieving details of listings.\n *\n * For more details, refer to the Marketplace API documentation:\n * https://www.sharetribe.com/api-reference/marketplace.html#listings\n */\n\nimport { AxiosInstance, AxiosResponse } from 'axios';\nimport MarketplaceApi from './index';\nimport { ListingsShowParameter, ListingsResponse, ListingsQueryParameter } from '../../types/marketplace/listings';\n\n/**\n * Class representing the Listings API.\n *\n * The Listings API provides methods to query and retrieve details of marketplace listings.\n */\nclass Listings {\n  private readonly endpoint: string;\n  private readonly axios: AxiosInstance;\n  private readonly headers: Record<string, string>;\n\n  /**\n   * Creates an instance of the Listings class.\n   *\n   * @param {MarketplaceApi} api - The Marketplace API instance providing configuration and request handling.\n   */\n  constructor(api: MarketplaceApi) {\n    this.endpoint = api.endpoint + '/listings';\n    this.axios = api.axios;\n    this.headers = api.headers;\n  }\n\n  /**\n   * Retrieves details of a specific listing.\n   *\n   * @template P\n   * @param {P & ListingsShowParameter} params - The parameters to identify the listing.\n   * @returns {Promise<AxiosResponse<ListingsResponse<'show', P>>>} - A promise resolving to the listing details.\n   *\n   * @example\n   * const response = await sdk.listings.show({ id: 'listing-id' });\n   * const listing = response.data;\n   */\n  async show<P extends ListingsShowParameter>(\n    params: P\n  ): Promise<AxiosResponse<ListingsResponse<'show', P>>> {\n    return this.axios.get<ListingsResponse<'show', P>>(`${this.endpoint}/show`, {\n      headers: this.headers,\n      params,\n    });\n  }\n\n  /**\n   * Queries listings based on specified filters.\n   *\n   * @template P\n   * @param {P & ListingsQueryParameter} params - Query parameters to filter listings.\n   * @returns {Promise<AxiosResponse<ListingsResponse<'query', P>>>} - A promise resolving to the query results.\n   *\n   * @example\n   * const response = await sdk.listings.query({ ids: ['listing-id-1', 'listing-id-2'] });\n   * const listings = response.data;\n   */\n  async query<P extends ListingsQueryParameter>(\n    params: P\n  ): Promise<AxiosResponse<ListingsResponse<'query', P>>> {\n    return this.axios.get<ListingsResponse<'query', P>>(`${this.endpoint}/query`, {\n      headers: this.headers,\n      params,\n    });\n  }\n}\n\nexport default Listings;\n","/**\n * @fileoverview Provides the Bookings class for managing bookings in the Sharetribe Marketplace API.\n * This class allows querying booking records.\n *\n * For more details, refer to the Marketplace API documentation:\n * https://www.sharetribe.com/api-reference/marketplace.html#bookings\n */\n\nimport { AxiosInstance, AxiosResponse } from 'axios';\nimport MarketplaceApi from './index';\nimport { BookingsQueryParameter, BookingsResponse } from '../../types/marketplace/bookings';\n\n/**\n * Class representing the Bookings API.\n *\n * The Bookings API provides methods to query booking records for marketplace resources.\n */\nclass Bookings {\n  private readonly endpoint: string;\n  private readonly axios: AxiosInstance;\n  private readonly headers: Record<string, string>;\n\n  /**\n   * Creates an instance of the Bookings class.\n   *\n   * @param {MarketplaceApi} api - The Marketplace API instance providing configuration and request handling.\n   */\n  constructor(api: MarketplaceApi) {\n    this.endpoint = api.endpoint + '/bookings';\n    this.axios = api.axios;\n    this.headers = api.headers;\n  }\n\n  /**\n   * Queries booking records based on specified filters.\n   *\n   * @template P\n   * @param {P & BookingsQueryParameter} params - Query parameters to filter booking records.\n   * @returns {Promise<AxiosResponse<BookingsResponse<'query', P>>>} - A promise resolving to the query results.\n   *\n   * @example\n   * const response = await sdk.bookings.query({\n   *   listingId: 'listing-id',\n   *   start: '2024-12-01T00:00:00Z',\n   *   end: '2024-12-31T23:59:59Z',\n   * });\n   *\n   * const bookings = response.data;\n   */\n  async query<P extends BookingsQueryParameter>(\n    params: P\n  ): Promise<AxiosResponse<BookingsResponse<'query', P>>> {\n    return this.axios.get<BookingsResponse<'query', P>>(`${this.endpoint}/query`, {\n      headers: this.headers,\n      params,\n    });\n  }\n}\n\nexport default Bookings;\n","/**\n * @fileoverview Provides the CurrentUser class for managing the current user's account in the Sharetribe Marketplace API.\n * This class includes methods for retrieving, creating, updating, and deleting the current authenticated user.\n *\n * For more details, refer to the Marketplace API documentation:\n * https://www.sharetribe.com/api-reference/marketplace.html#current-user\n */\n\nimport {AxiosInstance, AxiosResponse} from 'axios';\nimport MarketplaceApi from './index';\nimport {\n  CurrentUserChangeEmailParameter,\n  CurrentUserChangePasswordParameter,\n  CurrentUserCreateParameter,\n  CurrentUserCreateWithIdpParameter, CurrentUserDeleteParameter,\n  CurrentUserResponse,\n  CurrentUserShowParameter, CurrentUserUpdateProfileParameter, CurrentUserVerifyEmailParameter\n} from '../../types/marketplace/currentUser';\nimport { ExtraParameter } from '../../types/sharetribe';\n\n/**\n * Class representing the Current User API.\n *\n * This class provides methods to manage the current authenticated user's account,\n * including viewing, creating, updating, and deleting the user profile.\n */\nclass CurrentUser {\n  private readonly endpoint: string;\n  private readonly axios: AxiosInstance;\n  private readonly headers: Record<string, string>;\n  public readonly authRequired = true;\n\n  /**\n   * Creates an instance of the CurrentUser class.\n   *\n   * @param {MarketplaceApi} api - The Marketplace API instance providing configuration and request handling.\n   */\n  constructor(api: MarketplaceApi) {\n    this.endpoint = api.endpoint + '/current_user';\n    this.axios = api.axios;\n    this.headers = api.headers;\n  }\n\n  /**\n   * Retrieves the current authenticated user's details.\n   *\n   * @template P\n   * @param {P & CurrentUserShowParameter} params - Parameters for the request.\n   * @returns {Promise<CurrentUserResponse<'show', P>>} - A promise resolving to the user's details.\n   *\n   * @example\n   * const response = await sdk.currentUser.show({});\n   * const user = response.data;\n   */\n  async show<P extends CurrentUserShowParameter>(params: P): Promise<AxiosResponse<CurrentUserResponse<'show', P>>> {\n    return this.axios.get<CurrentUserResponse<'show', P>>(`${this.endpoint}/show`, {\n      ...this.headers,\n      params\n    });\n  }\n\n  /**\n   * Deletes the current authenticated user's account.\n   *\n   * @template P\n   * @template EP\n   * @param {P & CurrentUserDeleteParameter} params - Parameters for the request.\n   * @param {EP} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<CurrentUserResponse<'delete', P>>} - A promise resolving to the deletion confirmation.\n   *\n   * @example\n   * const response = await sdk.currentUser.delete();\n   * const result = response.data;\n   */\n  async delete<P extends CurrentUserDeleteParameter, EP extends ExtraParameter>(params: P, extraParams: EP): Promise<AxiosResponse<CurrentUserResponse<'delete', P>>> {\n    return this.axios.post<CurrentUserResponse<'delete', P>>(`${this.endpoint}/delete`, { ...params, ...extraParams }, { ...this.headers });\n  }\n\n  /**\n   * Creates a new user account.\n   *\n   * @template P\n   * @template EP\n   * @param {P & CurrentUserCreateParameter} params - Parameters for the new user.\n   * @param {EP} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<CurrentUserResponse<'create', P>>} - A promise resolving to the created user's details.\n   *\n   * @example\n   * const response = await sdk.currentUser.create({\n   *   email: 'user@example.com',\n   *   password: 'secure-password',\n   *   firstName: 'First',\n   *   lastName: 'Last'\n   * });\n   * const newUser = response.data;\n   */\n  async create<P extends CurrentUserCreateParameter, EP extends ExtraParameter>(params: P, extraParams: EP): Promise<AxiosResponse<CurrentUserResponse<'create', P>>> {\n    return this.axios.post<CurrentUserResponse<'create', P>>(`${this.endpoint}/create`, { ...params, ...extraParams }, { ...this.headers });\n  }\n\n  /**\n   * Creates a new user account using an identity provider.\n   *\n   * @template P\n   * @template EP\n   * @param {P & CurrentUserCreateWithIdpParameter} params - Parameters for the new user with identity provider details.\n   * @param {EP} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<CurrentUserResponse<'create_with_idp', P>>} - A promise resolving to the created user's details.\n   *\n   * @example\n   * const response = await sdk.currentUser.createWithIdp({\n   *   idpId: 'provider-id',\n   *   idpClientId: 'provider-client-id',\n   *   idpToken: 'provider-token'\n   * });\n   * const newUser = response.data;\n   */\n  async createWithIdp<P extends CurrentUserCreateWithIdpParameter, EP extends ExtraParameter>(params: P, extraParams: EP): Promise<AxiosResponse<CurrentUserResponse<'create_with_idp', P>>> {\n    return this.axios.post<CurrentUserResponse<'create_with_idp', P>>(`${this.endpoint}/create_with_idp`, { ...params, ...extraParams }, { ...this.headers });\n  }\n\n  /**\n   * Updates the current authenticated user's profile.\n   *\n   * @template P\n   * @template EP\n   * @param {P & CurrentUserUpdateProfileParameter} params - Parameters for updating the profile.\n   * @param {EP} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<CurrentUserResponse<'update_profile', P>>} - A promise resolving to the updated user's details.\n   *\n   * @example\n   * const response = await sdk.currentUser.updateProfile({\n   *   firstName: 'UpdatedFirst',\n   *   lastName: 'UpdatedLast'\n   * });\n   * const updatedUser = response.data;\n   */\n  async updateProfile<P extends CurrentUserUpdateProfileParameter, EP extends ExtraParameter>(params: P, extraParams: EP): Promise<AxiosResponse<CurrentUserResponse<'update_profile', P>>> {\n    return this.axios.post<CurrentUserResponse<'update_profile', P>>(`${this.endpoint}/update_profile`, { ...params, ...extraParams }, { ...this.headers });\n  }\n\n  /**\n   * Changes the current authenticated user's password.\n   *\n   * @template P\n   * @template EP\n   * @param {P & CurrentUserChangePasswordParameter} params - Parameters for changing the password.\n   * @param {EP} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<CurrentUserResponse<'change_password', P>>} - A promise resolving to the password change confirmation.\n   *\n   * @example\n   * const response = await sdk.currentUser.changePassword({\n   *   currentPassword: 'old-password',\n   *   newPassword: 'new-secure-password'\n   * });\n   * const result = response.data;\n   */\n  async changePassword<P extends CurrentUserChangePasswordParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams: EP\n  ): Promise<AxiosResponse<CurrentUserResponse<'change_password', P>>> {\n    return this.axios.post<CurrentUserResponse<'change_password', P>>(\n      `${this.endpoint}/change_password`,\n      { ...params, ...extraParams },\n      { ...this.headers }\n    );\n  }\n\n  /**\n   * Changes the current authenticated user's email address.\n   *\n   * @template P\n   * @template EP\n   * @param {P & CurrentUserChangeEmailParameter} params - Parameters for changing the email address.\n   * @param {EP} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<CurrentUserResponse<'change_email', P>>} - A promise resolving to the email change confirmation.\n   *\n   * @example\n   * const response = await sdk.currentUser.changeEmail({\n   *   newEmail: 'new-email@example.com',\n   *   currentPassword: 'current-password'\n   * });\n   * const result = response.data;\n   */\n  async changeEmail<P extends CurrentUserChangeEmailParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams: EP\n  ): Promise<AxiosResponse<CurrentUserResponse<'change_email', P>>> {\n    return this.axios.post<CurrentUserResponse<'change_email', P>>(\n      `${this.endpoint}/change_email`,\n      { ...params, ...extraParams },\n      { ...this.headers }\n    );\n  }\n\n  /**\n   * Verifies the current authenticated user's email address.\n   *\n   * @template P\n   * @template EP\n   * @param {P & CurrentUserVerifyEmailParameter} params - Parameters for verifying the email address.\n   * @param {EP} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<CurrentUserResponse<'verify_email', P>>} - A promise resolving to the email verification confirmation.\n   *\n   * @example\n   * const response = await sdk.currentUser.verifyEmail({\n   *   verificationToken: 'verification-token'\n   * });\n   * const result = response.data;\n   */\n  async verifyEmail<P extends CurrentUserVerifyEmailParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams: EP\n  ): Promise<AxiosResponse<CurrentUserResponse<'verify_email', P>>> {\n    return this.axios.post<CurrentUserResponse<'verify_email', P>>(\n      `${this.endpoint}/verify_email`,\n      { ...params, ...extraParams },\n      { ...this.headers }\n    );\n  }\n\n  /**\n   * Sends a verification email to the current authenticated user.\n   *\n   * @template P\n   * @returns {Promise<CurrentUserResponse<'send_verification_email', P>>} - A promise resolving to the email sending confirmation.\n   *\n   * @example\n   * const response = await sdk.currentUser.sendVerificationEmail();\n   * const result = response.data;\n   */\n  async sendVerificationEmail<P extends void>(): Promise<AxiosResponse<CurrentUserResponse<'send_verification_email', P>>> {\n    return this.axios.post<CurrentUserResponse<'send_verification_email', P>>(\n      `${this.endpoint}/send_verification_email`,\n      null,\n      { ...this.headers }\n    );\n  }\n\n  /**\n   * @deprecated This API endpoint is DEPRECATED. Use /stripe_account/create instead!\n   * Throws an error to indicate that this method should not be used.\n   */\n  async createStripeAccount() {\n    throw new Error('This API endpoint is DEPRECATED. Use /stripe_account/create instead!');\n  }\n\n  /**\n   * @deprecated This API endpoint is DEPRECATED. Use /stripe_account/update instead!\n   * Throws an error to indicate that this method should not be used.\n   */\n  async updateStripeAccount() {\n    throw new Error('This API endpoint is DEPRECATED. Use /stripe_account/update instead!');\n  }\n}\n\nexport default CurrentUser;","/**\n * @fileoverview Provides the Images class for managing images in the Sharetribe Marketplace API.\n * This class allows uploading images for marketplace listings and resources.\n *\n * For more details, refer to the Marketplace API documentation:\n * https://www.sharetribe.com/api-reference/marketplace.html#images\n */\n\nimport { AxiosInstance, AxiosResponse } from 'axios';\nimport MarketplaceApi from './index';\nimport { ImagesResponse, ImagesUploadParameter } from '../../types/marketplace/images';\nimport { ExtraParameter } from '../../types/sharetribe';\n\n/**\n * Class representing the Images API.\n *\n * The Images API provides methods to upload images for marketplace resources.\n */\nclass Images {\n  private readonly endpoint: string;\n  private readonly axios: AxiosInstance;\n  private readonly headers: Record<string, string>;\n  public readonly authRequired = true;\n\n  /**\n   * Creates an instance of the Images class.\n   *\n   * @param {MarketplaceApi} api - The Marketplace API instance providing configuration and request handling.\n   */\n  constructor(api: MarketplaceApi) {\n    this.endpoint = api.endpoint + '/images';\n    this.axios = api.axios;\n    this.headers = api.headers;\n  }\n\n  /**\n   * Uploads an image to the marketplace.\n   *\n   * @template P\n   * @template EP\n   * @param {P & ImagesUploadParameter} params - The image upload parameters, including the image file and metadata.\n   * @param {EP & ExtraParameter} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<ImagesResponse<'upload', EP>>>} - A promise resolving to the uploaded image details.\n   *\n   * @example\n   * const response = await sdk.images.upload({\n   *   image: file,\n   * });\n   *\n   * const uploadedImage = response.data;\n   */\n  async upload<P extends ImagesUploadParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams: EP\n  ): Promise<AxiosResponse<ImagesResponse<'upload', EP>>> {\n    return this.axios.post<ImagesResponse<'upload', EP>>(\n      `${this.endpoint}/upload`,\n      { ...params, ...extraParams },\n      { ...this.headers }\n    );\n  }\n}\n\nexport default Images;\n","/**\n * @fileoverview Provides the Marketplace class for retrieving marketplace details from the Sharetribe Marketplace API.\n * This class allows accessing configuration and metadata about the marketplace.\n *\n * For more details, refer to the Marketplace API documentation:\n * https://www.sharetribe.com/api-reference/marketplace.html#marketplace\n */\n\nimport { AxiosInstance, AxiosResponse } from 'axios';\nimport MarketplaceApi from './index';\nimport { MarketplaceResponse } from '../../types/marketplace/marketplace';\n\n/**\n * Class representing the Marketplace API.\n *\n * The Marketplace API provides methods to retrieve configuration and metadata about the marketplace.\n */\nclass Marketplace {\n  private readonly endpoint: string;\n  private readonly axios: AxiosInstance;\n  private readonly headers: Record<string, string>;\n\n  /**\n   * Creates an instance of the Marketplace class.\n   *\n   * @param {MarketplaceApi} api - The Marketplace API instance providing configuration and request handling.\n   */\n  constructor(api: MarketplaceApi) {\n    this.endpoint = api.endpoint + '/marketplace';\n    this.axios = api.axios;\n    this.headers = api.headers;\n  }\n\n  /**\n   * Retrieves the configuration and metadata of the marketplace.\n   *\n   * @returns {Promise<AxiosResponse<MarketplaceResponse<'show'>>>} - A promise resolving to the marketplace details.\n   *\n   * @example\n   * const response = await sdk.marketplace.show();\n   * const marketplaceDetails = response.data;\n   */\n  async show(): Promise<AxiosResponse<MarketplaceResponse<'show'>>> {\n    return this.axios.get<MarketplaceResponse<'show'>>(`${this.endpoint}/show`, {\n      headers: this.headers,\n    });\n  }\n}\n\nexport default Marketplace;\n","/**\n * @fileoverview Provides the Messages class for managing messages in the Sharetribe Marketplace API.\n * This class allows querying and sending messages.\n *\n * For more details, refer to the Marketplace API documentation:\n * https://www.sharetribe.com/api-reference/marketplace.html#messages\n */\n\nimport {AxiosInstance, AxiosResponse} from 'axios';\nimport MarketplaceApi from './index';\nimport { ExtraParameter } from '../../types/sharetribe';\nimport { MessagesQueryParameter, MessagesResponse, MessagesSendParameter } from '../../types/marketplace/messages';\n\n/**\n * Class representing the Messages API.\n *\n * The Messages API provides methods to query and send messages in the marketplace.\n */\nclass Messages {\n  private readonly endpoint: string;\n  private readonly axios: AxiosInstance;\n  private readonly headers: Record<string, string>;\n\n  /**\n   * Creates an instance of the Messages class.\n   *\n   * @param {MarketplaceApi} api - The Marketplace API instance providing configuration and request handling.\n   */\n  constructor(api: MarketplaceApi) {\n    this.endpoint = api.endpoint + '/messages';\n    this.axios = api.axios;\n    this.headers = api.headers;\n  }\n\n  /**\n   * Queries messages based on specified filters.\n   *\n   * @template P\n   * @param {P & MessagesQueryParameter} params - Query parameters to filter messages.\n   * @returns {Promise<AxiosResponse<MessagesResponse<'query', P>>>} - A promise resolving to the query results.\n   *\n   * @example\n   * const response = await sdk.messages.query({ transactionId: 'transaction-id' });\n   * const messages = response.data;\n   */\n  async query<P extends MessagesQueryParameter>(\n    params: P\n  ): Promise<AxiosResponse<MessagesResponse<'query', P>>> {\n    return this.axios.get<MessagesResponse<'query', P>>(`${this.endpoint}/query`, {\n      headers: this.headers,\n      params,\n    });\n  }\n\n  /**\n   * Sends a new message.\n   *\n   * @template P\n   * @template EP\n   * @param {P & MessagesSendParameter} params - Parameters specifying the message content and recipient.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<MessagesResponse<'send', P, EP>>>} - A promise resolving to the sent message details.\n   *\n   * @example\n   * const response = await sdk.messages.send({\n   *   transactionId: 'transaction-id', content: 'Hello!'\n   * });\n   * const sentMessage = response.data;\n   */\n  async send<P extends MessagesSendParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams: EP | void\n  ): Promise<AxiosResponse<MessagesResponse<'send', P, EP>>> {\n    return this.axios.post<MessagesResponse<'send', P, EP>>(\n      `${this.endpoint}/create`,\n      { ...params, ...extraParams },\n      this.headers\n    );\n  }\n}\n\nexport default Messages;","/**\n * @fileoverview Provides the OwnListings class for managing the authenticated user's listings in the Sharetribe Marketplace API.\n * This class includes methods for creating, updating, publishing, and managing the lifecycle of listings.\n *\n * For more details, refer to the Marketplace API documentation:\n * https://www.sharetribe.com/api-reference/marketplace.html#own-listings\n */\n\nimport { AxiosInstance, AxiosResponse } from 'axios';\nimport MarketplaceApi from './index';\nimport {\n  OwnListingsAddImageParameter,\n  OwnListingsCloseParameter,\n  OwnListingsCreateDraftParameter,\n  OwnListingsCreateParameter,\n  OwnListingsDiscardDraftParameter,\n  OwnListingsOpenParameter,\n  OwnListingsPublishDraftParameter,\n  OwnListingsQueryParameter,\n  OwnListingsResponse,\n  OwnListingsShowParameter,\n  OwnListingsUpdateParameter\n} from '../../types/marketplace/ownListings';\nimport { ExtraParameter } from '../../types/sharetribe';\n\n/**\n * Class representing the Own Listings API.\n *\n * This class provides methods for the authenticated user to manage their listings, including creating, updating, publishing drafts, and adding images.\n */\nclass OwnListings {\n  private readonly endpoint: string;\n  private readonly axios: AxiosInstance;\n  private readonly headers: Record<string, string>;\n  public readonly authRequired = true;\n\n  /**\n   * Creates an instance of the OwnListings class.\n   *\n   * @param {MarketplaceApi} api - The Marketplace API instance providing configuration and request handling.\n   */\n  constructor(api: MarketplaceApi) {\n    this.endpoint = api.endpoint + '/own_listings';\n    this.axios = api.axios;\n    this.headers = api.headers;\n  }\n\n  /**\n   * Retrieves details of a specific listing.\n   *\n   * @template P\n   * @param {OwnListingsShowParameter} params - Parameters identifying the listing.\n   * @returns {Promise<AxiosResponse<OwnListingsResponse<'show', P>>>} - A promise resolving to the listing details.\n   *\n   * @example\n   * const response = await sdk.ownListings.show({ id: 'listing-id' });\n   * const listing = response.data;\n   */\n  async show<P extends OwnListingsShowParameter>(\n    params: P\n  ): Promise<AxiosResponse<OwnListingsResponse<'show', P>>> {\n    return this.axios.get<OwnListingsResponse<'show', P>>(`${this.endpoint}/show`, {\n      headers: this.headers,\n      params,\n    });\n  }\n\n  /**\n   * Queries the user's listings based on specified filters.\n   *\n   * @template P\n   * @param {OwnListingsQueryParameter} params - Query parameters to filter listings.\n   * @returns {Promise<AxiosResponse<OwnListingsResponse<'query', P>>>} - A promise resolving to the query results.\n   *\n   * @example\n   * const response = await sdk.ownListings.query({});\n   * const listings = response.data;\n   */\n  async query<P extends OwnListingsQueryParameter>(\n    params: P\n  ): Promise<AxiosResponse<OwnListingsResponse<'query', P>>> {\n    return this.axios.get<OwnListingsResponse<'query', P>>(`${this.endpoint}/query`, {\n      headers: this.headers,\n      params,\n    });\n  }\n\n  /**\n   * Creates a new listing.\n   *\n   * @template P\n   * @template EP\n   * @param {P & OwnListingsCreateParameter} params - Parameters for the new listing.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<OwnListingsResponse<'create', P, EP>>>} - A promise resolving to the created listing details.\n   *\n   * @example\n   * const response = await sdk.ownListings.create({\n   *    title: 'New Listing',\n   *    description: 'Description',\n   *    price: {\n   *      amount: 1000,\n   *      currency: 'USD'\n   *    }\n   *  });\n   * const newListing = response.data;\n   */\n  async create<P extends OwnListingsCreateParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams?: EP\n  ): Promise<AxiosResponse<OwnListingsResponse<'create', P, EP>>> {\n    return this.axios.post<OwnListingsResponse<'create', P, EP>>(\n      `${this.endpoint}/create`,\n      { ...params, ...extraParams },\n      { headers: this.headers }\n    );\n  }\n\n  /**\n   * Creates a draft listing.\n   *\n   * @template P\n   * @template EP\n   * @param {P & OwnListingsCreateDraftParameter} params - Parameters for the draft listing.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<OwnListingsResponse<'createDraft', P, EP>>>} - A promise resolving to the created draft details.\n   *\n   * @example\n   * const response = await sdk.ownListings.createDraft({\n   *   title: 'Draft Listing',\n   *   description: 'This is a draft',\n   * });\n   * const draft = response.data;\n   */\n  async createDraft<P extends OwnListingsCreateDraftParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams?: EP\n  ): Promise<AxiosResponse<OwnListingsResponse<'createDraft', P, EP>>> {\n    return this.axios.post<OwnListingsResponse<'createDraft', P, EP>>(\n      `${this.endpoint}/create_draft`,\n      { ...params, ...extraParams },\n      { headers: this.headers }\n    );\n  }\n\n  /**\n   * Updates an existing listing.\n   *\n   * @template P\n   * @template EP\n   * @param {P & OwnListingsUpdateParameter} params - Parameters for updating the listing.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<OwnListingsResponse<'update', P, EP>>>} - A promise resolving to the updated listing details.\n   *\n   * @example\n   * const response = await sdk.ownListings.update({\n   *   id: 'listing-id',\n   *   title: 'Updated Listing Title',\n   * });\n   * const updatedListing = response.data;\n   */\n  async update<P extends OwnListingsUpdateParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams?: EP\n  ): Promise<AxiosResponse<OwnListingsResponse<'update', P, EP>>> {\n    return this.axios.post<OwnListingsResponse<'update', P, EP>>(\n      `${this.endpoint}/update`,\n      { ...params, ...extraParams },\n      { headers: this.headers }\n    );\n  }\n\n  /**\n   * Publishes a draft listing.\n   *\n   * @template P\n   * @template EP\n   * @param {P & OwnListingsPublishDraftParameter} params - Parameters for publishing the draft listing.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<OwnListingsResponse<'publishDraft', P, EP>>>} - A promise resolving to the published listing details.\n   *\n   * @example\n   * const response = await sdk.ownListings.publishDraft({\n   *   id: 'draft-id',\n   * });\n   * const publishedListing = response.data;\n   */\n  async publishDraft<P extends OwnListingsPublishDraftParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams?: EP\n  ): Promise<AxiosResponse<OwnListingsResponse<'publishDraft', P, EP>>> {\n    return this.axios.post<OwnListingsResponse<'publishDraft', P, EP>>(\n      `${this.endpoint}/publish_draft`,\n      { ...params, ...extraParams },\n      { headers: this.headers }\n    );\n  }\n\n  /**\n   * Discards a draft listing.\n   *\n   * @template P\n   * @param {P & OwnListingsDiscardDraftParameter} params - Parameters for discarding the draft.\n   * @returns {Promise<AxiosResponse<OwnListingsResponse<'discardDraft', P>>>} - A promise resolving to the discard confirmation.\n   *\n   * @example\n   * const response = await sdk.ownListings.discardDraft({ id: 'draft-id' });\n   * const result = response.data;\n   */\n  async discardDraft<P extends OwnListingsDiscardDraftParameter>(\n    params: P\n  ): Promise<AxiosResponse<OwnListingsResponse<'discardDraft', P>>> {\n    return this.axios.post<OwnListingsResponse<'discardDraft', P>>(\n      `${this.endpoint}/discard_draft`,\n      params,\n      { headers: this.headers }\n    );\n  }\n\n  /**\n   * Closes a listing.\n   *\n   * @template P\n   * @template EP\n   * @param {P & OwnListingsCloseParameter} params - Parameters for closing the listing.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<OwnListingsResponse<'close', P>>>} - A promise resolving to the closed listing details.\n   *\n   * @example\n   * const response = await sdk.ownListings.close({ id: 'listing-id' });\n   * const closedListing = response.data;\n   */\n  async close<P extends OwnListingsCloseParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams?: EP\n  ): Promise<AxiosResponse<OwnListingsResponse<'close', P>>> {\n    return this.axios.post<OwnListingsResponse<'close', P>>(\n      `${this.endpoint}/close`,\n      { ...params, ...extraParams },\n      { headers: this.headers }\n    );\n  }\n\n  /**\n   * Opens a listing.\n   *\n   * @template P\n   * @template EP\n   * @param {P & OwnListingsOpenParameter} params - Parameters for opening the listing.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<OwnListingsResponse<'open', P>>>} - A promise resolving to the opened listing details.\n   *\n   * @example\n   * const response = await sdk.ownListings.open({ id: 'listing-id' });\n   * const openedListing = response.data;\n   */\n  async open<P extends OwnListingsOpenParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams?: EP\n  ): Promise<AxiosResponse<OwnListingsResponse<'open', P>>> {\n    return this.axios.post<OwnListingsResponse<'open', P>>(\n      `${this.endpoint}/open`,\n      { ...params, ...extraParams },\n      { headers: this.headers }\n    );\n  }\n\n  /**\n   * Adds an image to a listing.\n   *\n   * @template P\n   * @template EP\n   * @param {P & OwnListingsAddImageParameter} params - Parameters specifying the image to add.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<OwnListingsResponse<'addImage', P>>>} - A promise resolving to the updated listing details.\n   *\n   * @example\n   * const response = await sdk.ownListings.addImage({\n   *    id: 'listing-id', imageId: 'image-id'\n   * });\n   * const updatedListing = response.data;\n   */\n  async addImage<P extends OwnListingsAddImageParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams?: EP\n  ): Promise<AxiosResponse<OwnListingsResponse<'addImage', P>>> {\n    return this.axios.post<OwnListingsResponse<'addImage', P>>(\n      `${this.endpoint}/add_image`,\n      { ...params, ...extraParams },\n      { headers: this.headers }\n    );\n  }\n}\n\nexport default OwnListings;","/**\n * @fileoverview Provides the PasswordReset class for managing password reset requests and operations in the Sharetribe Marketplace API.\n * This class includes methods for requesting a password reset and resetting the password using a token.\n *\n * For more details, refer to the Marketplace API documentation:\n * https://www.sharetribe.com/api-reference/marketplace.html#password-reset\n */\n\nimport { AxiosInstance, AxiosResponse } from 'axios';\nimport MarketplaceApi from './index';\nimport {\n  PasswordResetRequestParams,\n  PasswordResetResetParams,\n  PasswordResetResponse,\n} from '../../types/marketplace/passwordReset';\nimport { ExtraParameter } from '../../types/sharetribe';\n\n/**\n * Class representing the Password Reset API.\n *\n * The Password Reset API provides methods for requesting a password reset email and resetting the password.\n */\nclass PasswordReset {\n  private readonly endpoint: string;\n  private readonly axios: AxiosInstance;\n  private readonly headers: Record<string, string>;\n\n  /**\n   * Creates an instance of the PasswordReset class.\n   *\n   * @param {MarketplaceApi} api - The Marketplace API instance providing configuration and request handling.\n   */\n  constructor(api: MarketplaceApi) {\n    this.endpoint = api.endpoint + '/password_reset';\n    this.axios = api.axios;\n    this.headers = api.headers;\n  }\n\n  /**\n   * Requests a password reset email.\n   *\n   * @template P\n   * @template EP\n   * @param {P & PasswordResetRequestParams} params - Parameters for the password reset request.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<PasswordResetResponse<'request', EP>>>} - A promise resolving to the password reset request response.\n   *\n   * @example\n   * const response = await sdk.passwordReset.request({\n   *   email: 'user@example.com',\n   * });\n   * const result = response.data;\n   */\n  async request<P extends PasswordResetRequestParams, EP extends ExtraParameter>(\n    params: P,\n    extraParams?: EP\n  ): Promise<AxiosResponse<PasswordResetResponse<'request', EP>>> {\n    return this.axios.post<PasswordResetResponse<'request', EP>>(\n      `${this.endpoint}/request`,\n      { ...params, ...extraParams },\n      { headers: this.headers }\n    );\n  }\n\n  /**\n   * Resets the user's password using a token.\n   *\n   * @template P\n   * @template EP\n   * @param {P & PasswordResetResetParams} params - Parameters for resetting the password.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<PasswordResetResponse<'reset', EP>>>} - A promise resolving to the password reset confirmation response.\n   *\n   * @example\n   * const response = await sdk.passwordReset.reset({\n   *   email: 'user@example.com',\n   *   passwordResetToken: 'password-reset-token',\n   *   newPassword: 'new-password',\n   * });\n   * const result = response.data;\n   */\n  async reset<P extends PasswordResetResetParams, EP extends ExtraParameter>(\n    params: P,\n    extraParams?: EP\n  ): Promise<AxiosResponse<PasswordResetResponse<'reset', EP>>> {\n    return this.axios.post<PasswordResetResponse<'reset', EP>>(\n      `${this.endpoint}/reset`,\n      { ...params, ...extraParams },\n      { headers: this.headers }\n    );\n  }\n}\n\nexport default PasswordReset;\n","/**\n * @fileoverview Provides the ProcessTransitions class for managing process transitions in the Sharetribe Marketplace API.\n * This class includes a method for querying process transitions.\n *\n * For more details, refer to the Marketplace API documentation:\n * https://www.sharetribe.com/api-reference/marketplace.html#process-transitions\n */\n\nimport { AxiosInstance, AxiosResponse } from 'axios';\nimport MarketplaceApi from './index';\nimport {\n  ProcessTransitionsQueryParameter,\n  ProcessTransitionsResponse,\n} from '../../types/marketplace/processTransitions';\n\n/**\n * Class representing the Process Transitions API.\n *\n * The Process Transitions API provides methods for querying transitions within processes.\n */\nclass ProcessTransitions {\n  private readonly endpoint: string;\n  private readonly axios: AxiosInstance;\n  private readonly headers: Record<string, string>;\n  public readonly authRequired = true;\n\n  /**\n   * Creates an instance of the ProcessTransitions class.\n   *\n   * @param {MarketplaceApi} api - The Marketplace API instance providing configuration and request handling.\n   */\n  constructor(api: MarketplaceApi) {\n    this.endpoint = api.endpoint + '/process_transitions';\n    this.axios = api.axios;\n    this.headers = api.headers;\n  }\n\n  /**\n   * Queries process transitions based on specified filters.\n   *\n   * @template P\n   * @param {P & ProcessTransitionsQueryParameter} params - Query parameters for filtering transitions.\n   * @returns {Promise<AxiosResponse<ProcessTransitionsResponse<'query'>>>} - A promise resolving to the query results.\n   *\n   * @example\n   * const response = await sdk.processTransitions.query({\n   *   processAlias: 'booking-process',\n   * });\n   * const transitions = response.data;\n   */\n  async query<P extends ProcessTransitionsQueryParameter>(\n    params: P\n  ): Promise<AxiosResponse<ProcessTransitionsResponse<'query'>>> {\n    return this.axios.get<ProcessTransitionsResponse<'query'>>(`${this.endpoint}/query`, {\n      headers: this.headers,\n      params,\n    });\n  }\n}\n\nexport default ProcessTransitions;\n","/**\n * @fileoverview Provides the Reviews class for managing reviews in the Sharetribe Marketplace API.\n * This class includes methods for querying and retrieving details of reviews.\n *\n * For more details, refer to the Marketplace API documentation:\n * https://www.sharetribe.com/api-reference/marketplace.html#reviews\n */\n\nimport {AxiosInstance, AxiosResponse} from 'axios';\nimport MarketplaceApi from './index';\nimport {ReviewsQueryParameter, ReviewsResponse, ReviewsShowParameter,} from '../../types/marketplace/reviews';\n\n/**\n * Class representing the Reviews API.\n *\n * The Reviews API provides methods for querying and retrieving details of reviews within the marketplace.\n */\nclass Reviews {\n  private readonly endpoint: string;\n  private readonly axios: AxiosInstance;\n  private readonly headers: Record<string, string>;\n\n  /**\n   * Creates an instance of the Reviews class.\n   *\n   * @param {MarketplaceApi} api - The Marketplace API instance providing configuration and request handling.\n   */\n  constructor(api: MarketplaceApi) {\n    this.endpoint = api.endpoint + '/reviews';\n    this.axios = api.axios;\n    this.headers = api.headers;\n  }\n\n  /**\n   * Retrieves details of a specific review.\n   *\n   * @template P\n   * @param {P & ReviewsShowParameter} params - Parameters identifying the review.\n   * @returns {Promise<AxiosResponse<ReviewsResponse<'show', P>>>} - A promise resolving to the review details.\n   *\n   * @example\n   * const response = await sdk.reviews.show({ id: 'review-id' });\n   * const review = response.data;\n   */\n  async show<P extends ReviewsShowParameter>(\n    params: P\n  ): Promise<AxiosResponse<ReviewsResponse<'show', P>>> {\n    return this.axios.get<ReviewsResponse<'show', P>>(`${this.endpoint}/show`, {\n      headers: this.headers,\n      params,\n    });\n  }\n\n  /**\n   * Queries reviews based on specified filters.\n   *\n   * @template P\n   * @param {P & ReviewsQueryParameter} params - Query parameters to filter reviews.\n   * @returns {Promise<AxiosResponse<ReviewsResponse<'query', P>>>} - A promise resolving to the query results.\n   *\n   * @example\n   * const response = await sdk.reviews.query({ listingId: 'listing-id', perPage: 10 });\n   * const reviews = response.data;\n   */\n  async query<P extends ReviewsQueryParameter>(\n    params: P\n  ): Promise<AxiosResponse<ReviewsResponse<'query', P>>> {\n    return this.axios.get<ReviewsResponse<'query', P>>(`${this.endpoint}/query`, {\n      headers: this.headers,\n      params,\n    });\n  }\n}\n\nexport default Reviews;\n","/**\n * @fileoverview Provides the Stock class for managing stock levels in the Sharetribe Marketplace API.\n * This class includes methods for comparing and setting stock levels.\n *\n * For more details, refer to the Marketplace API documentation:\n * https://www.sharetribe.com/api-reference/marketplace.html#stock\n */\n\nimport { AxiosInstance, AxiosResponse } from 'axios';\nimport MarketplaceApi from './index';\nimport { StockCompareAndSetParameter, StockResponse } from '../../types/marketplace/stock';\nimport { ExtraParameter } from '../../types/sharetribe';\n\n/**\n * Class representing the Stock API.\n *\n * The Stock API provides methods for comparing and setting stock levels for marketplace resources.\n */\nclass Stock {\n  private readonly endpoint: string;\n  private readonly axios: AxiosInstance;\n  public readonly authRequired = true;\n\n  /**\n   * Creates an instance of the Stock class.\n   *\n   * @param {MarketplaceApi} api - The Marketplace API instance providing configuration and request handling.\n   */\n  constructor(api: MarketplaceApi) {\n    this.endpoint = api.endpoint + '/stock';\n    this.axios = api.axios;\n  }\n\n  /**\n   * Compares and sets stock levels for a specific resource.\n   *\n   * @template P\n   * @template EP\n   * @param {P & StockCompareAndSetParameter} params - Parameters for comparing and setting stock levels.\n   * @param {EP} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<StockResponse<'compareAndSet', EP>>>} - A promise resolving to the result of the stock comparison and update.\n   *\n   * @example\n   * const response = await sdk.stock.compareAndSet({\n   *   listingId: 'listing-1',\n   *   oldTotal: 10,\n   *   newTotal: 100\n   * });\n   * const stockUpdateResult = response.data;\n   */\n  async compareAndSet<P extends StockCompareAndSetParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams: EP\n  ): Promise<AxiosResponse<StockResponse<'compareAndSet', EP>>> {\n    return this.axios.post<StockResponse<'compareAndSet', EP>>(\n      `${this.endpoint}/compare_and_set`,\n      { ...params, ...extraParams }\n    );\n  }\n}\n\nexport default Stock;\n","/**\n * @fileoverview Provides the StockAdjustments class for managing stock adjustments in the Sharetribe Marketplace API.\n * This class includes methods for querying and creating stock adjustments.\n *\n * For more details, refer to the Marketplace API documentation:\n * https://www.sharetribe.com/api-reference/marketplace.html#stock-adjustments\n */\n\nimport { AxiosInstance, AxiosResponse } from 'axios';\nimport MarketplaceApi from './index';\nimport {\n  StockAdjustmentsCreateParameter,\n  StockAdjustmentsQueryParameter,\n  StockAdjustmentsResponse,\n} from '../../types/marketplace/stockAdjustment';\nimport { ExtraParameter } from '../../types/sharetribe';\n\n/**\n * Class representing the Stock Adjustments API.\n *\n * The Stock Adjustments API provides methods for querying and creating adjustments to stock levels.\n */\nclass StockAdjustments {\n  private readonly endpoint: string;\n  private readonly axios: AxiosInstance;\n  private readonly headers: Record<string, string>;\n  public readonly authRequired = true;\n\n  /**\n   * Creates an instance of the StockAdjustments class.\n   *\n   * @param {MarketplaceApi} api - The Marketplace API instance providing configuration and request handling.\n   */\n  constructor(api: MarketplaceApi) {\n    this.endpoint = api.endpoint + '/stock_adjustments';\n    this.axios = api.axios;\n    this.headers = api.headers;\n  }\n\n  /**\n   * Queries stock adjustments based on specified filters.\n   *\n   * @template P\n   * @param {P & StockAdjustmentsQueryParameter} params - Query parameters to filter stock adjustments.\n   * @returns {Promise<AxiosResponse<StockAdjustmentsResponse<'query', P>>>} - A promise resolving to the query results.\n   *\n   * @example\n   * const response = await sdk.stockAdjustments.query({\n   *   listingId: 'listing-id',\n   *   start: new Date('2022-01-01'),\n   *   end: new Date('2022-01-31'),\n   * });\n   * const stockAdjustments = response.data;\n   */\n  async query<P extends StockAdjustmentsQueryParameter>(\n    params: P\n  ): Promise<AxiosResponse<StockAdjustmentsResponse<'query', P>>> {\n    return this.axios.get<StockAdjustmentsResponse<'query', P>>(`${this.endpoint}/query`, {\n      headers: this.headers,\n      params,\n    });\n  }\n\n  /**\n   * Creates a stock adjustment for a specific resource.\n   *\n   * @template P\n   * @template EP\n   * @param {P & StockAdjustmentsCreateParameter} params - Parameters for the stock adjustment.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<StockAdjustmentsResponse<'create', P, EP>>>} - A promise resolving to the created stock adjustment details.\n   *\n   * @example\n   * const response = await sdk.stockAdjustments.create({\n   *   listingId: 'listing-id',\n   *   quantity: 5,\n   * });\n   * const createdAdjustment = response.data;\n   */\n  async create<P extends StockAdjustmentsCreateParameter, EP extends ExtraParameter | undefined>(\n    params: P,\n    extraParams?: EP\n  ): Promise<AxiosResponse<StockAdjustmentsResponse<'create', P, EP>>> {\n    return this.axios.post<StockAdjustmentsResponse<'create', P, EP>>(\n      `${this.endpoint}/create`,\n      { ...params, ...extraParams },\n      { headers: this.headers }\n    );\n  }\n}\n\nexport default StockAdjustments;\n","/**\n * @fileoverview Provides the StripeAccount class for managing Stripe accounts in the Sharetribe Marketplace API.\n * This class includes methods for fetching, creating, and updating Stripe accounts.\n *\n * For more details, refer to the Marketplace API documentation:\n * https://www.sharetribe.com/api-reference/marketplace.html#stripe-account\n */\n\nimport { AxiosInstance, AxiosResponse } from 'axios';\nimport MarketplaceApi from './index';\nimport {\n  StripeAccountCreateParameter,\n  StripeAccountResponse,\n  StripeAccountUpdateParameter,\n} from '../../types/marketplace/stripeAccount';\nimport { ExtraParameter } from '../../types/sharetribe';\n\n/**\n * Class representing the Stripe Account API.\n *\n * The Stripe Account API provides methods for managing Stripe accounts associated with the marketplace.\n */\nclass StripeAccount {\n  private readonly endpoint: string;\n  private readonly axios: AxiosInstance;\n  private readonly headers: Record<string, string>;\n  public readonly authRequired = true;\n\n  /**\n   * Creates an instance of the StripeAccount class.\n   *\n   * @param {MarketplaceApi} api - The Marketplace API instance providing configuration and request handling.\n   */\n  constructor(api: MarketplaceApi) {\n    this.endpoint = api.endpoint + '/stripe_account';\n    this.axios = api.axios;\n    this.headers = api.headers;\n  }\n\n  /**\n   * Fetches the current Stripe account details.\n   *\n   * @returns {Promise<AxiosResponse<StripeAccountResponse<'fetch'>>>} - A promise resolving to the Stripe account details.\n   *\n   * @example\n   * const response = await sdk.stripeAccount.fetch();\n   * const stripeAccountDetails = response.data;\n   */\n  async fetch(): Promise<AxiosResponse<StripeAccountResponse<'fetch'>>> {\n    return this.axios.get<StripeAccountResponse<'fetch'>>(`${this.endpoint}/fetch`, {\n      headers: this.headers,\n    });\n  }\n\n  /**\n   * Creates a new Stripe account.\n   *\n   * @template P\n   * @template EP\n   * @param {P & StripeAccountCreateParameter} params - Parameters for creating the Stripe account.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<StripeAccountResponse<'create', EP>>>} - A promise resolving to the created Stripe account details.\n   *\n   * @example\n   * const response = await sdk.stripeAccount.create({\n   *   country: 'US',\n   *   accountToken: 'account-token',\n   *   bankAccountToken: 'bank-account-token',\n   *   businessProfileMCC: '1234',\n   *   businessProfileURL: 'https://example.com',\n   *   businessProfileProductDescription: 'Product description',\n   *   requestedCapabilities: ['card_payments', 'transfers'],\n   * });\n   * const createdStripeAccount = response.data;\n   */\n  async create<P extends StripeAccountCreateParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams?: EP\n  ): Promise<AxiosResponse<StripeAccountResponse<'create', EP>>> {\n    return this.axios.post<StripeAccountResponse<'create', EP>>(\n      `${this.endpoint}/create`,\n      { ...params, ...extraParams },\n      { headers: this.headers }\n    );\n  }\n\n  /**\n   * Updates an existing Stripe account.\n   *\n   * @template P\n   * @template EP\n   * @param {P & StripeAccountUpdateParameter} params - Parameters for updating the Stripe account.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<StripeAccountResponse<'update', EP>>>} - A promise resolving to the updated Stripe account details.\n   *\n   * @example\n   * const response = await sdk.stripeAccount.update({\n   *   accountToken: 'new-account-token',\n   * });\n   * const updatedStripeAccount = response.data;\n   */\n  async update<P extends StripeAccountUpdateParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams?: EP\n  ): Promise<AxiosResponse<StripeAccountResponse<'update', EP>>> {\n    return this.axios.post<StripeAccountResponse<'update', EP>>(\n      `${this.endpoint}/update`,\n      { ...params, ...extraParams },\n      { headers: this.headers }\n    );\n  }\n}\n\nexport default StripeAccount;\n","/**\n * @fileoverview Provides the StripeAccountLinks class for managing Stripe account links in the Sharetribe Marketplace API.\n * This class includes methods for creating account links to manage Stripe accounts.\n *\n * For more details, refer to the Marketplace API documentation:\n * https://www.sharetribe.com/api-reference/marketplace.html#stripe-account-links\n */\n\nimport { AxiosInstance, AxiosResponse } from 'axios';\nimport MarketplaceApi from './index';\nimport {\n  StripeAccountLinksCreateParameter,\n  StripeAccountLinksResponse,\n} from '../../types/marketplace/stripeAccountLinks';\nimport { ExtraParameter } from '../../types/sharetribe';\n\n/**\n * Class representing the Stripe Account Links API.\n *\n * The Stripe Account Links API provides methods for creating links to manage Stripe accounts, such as onboarding links.\n */\nclass StripeAccountLinks {\n  private readonly endpoint: string;\n  private readonly axios: AxiosInstance;\n  private readonly headers: Record<string, string>;\n  public readonly authRequired = true;\n\n  /**\n   * Creates an instance of the StripeAccountLinks class.\n   *\n   * @param {MarketplaceApi} api - The Marketplace API instance providing configuration and request handling.\n   */\n  constructor(api: MarketplaceApi) {\n    this.endpoint = api.endpoint + '/stripe_account_links';\n    this.axios = api.axios;\n    this.headers = api.headers;\n  }\n\n  /**\n   * Creates a new Stripe account link.\n   *\n   * @template P\n   * @template EP\n   * @param {P & StripeAccountLinksCreateParameter} params - Parameters for creating the account link.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<StripeAccountLinksResponse<'create', EP>>>} - A promise resolving to the created account link details.\n   *\n   * @example\n   * const response = await sdk.stripeAccountLinks.create({\n   *   failureURL: 'https://example.com/failure',\n   *   successURL: 'https://example.com/success',\n   *   type: 'custom_account_verification',\n   *   collectionOptions: {\n   *     fields: ['currently_due', 'eventually_due'],\n   *     future_requirements: ['include', 'omit'],\n   *   },\n   * });\n   * const accountLink = response.data;\n   */\n  async create<P extends StripeAccountLinksCreateParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams?: EP\n  ): Promise<AxiosResponse<StripeAccountLinksResponse<'create', EP>>> {\n    return this.axios.post<StripeAccountLinksResponse<'create', EP>>(\n      `${this.endpoint}/create`,\n      { ...params, ...extraParams },\n      { headers: this.headers }\n    );\n  }\n}\n\nexport default StripeAccountLinks;\n","/**\n * @fileoverview Provides the StripeCustomer class for managing Stripe customers in the Sharetribe Marketplace API.\n * This class includes methods for creating customers, adding payment methods, and deleting payment methods.\n *\n * For more details, refer to the Marketplace API documentation:\n * https://www.sharetribe.com/api-reference/marketplace.html#stripe-customer\n */\n\nimport { AxiosInstance, AxiosResponse } from 'axios';\nimport MarketplaceApi from './index';\nimport {\n  StripeCustomerAddPaymentMethodParameter,\n  StripeCustomerCreateParameter,\n  StripeCustomerDeletePaymentMethodParameter,\n  StripeCustomerResponse,\n} from '../../types/marketplace/stripeCustomer';\nimport { ExtraParameter } from '../../types/sharetribe';\n\n/**\n * Class representing the Stripe Customer API.\n *\n * The Stripe Customer API provides methods for managing Stripe customers, including creating customers and managing payment methods.\n */\nclass StripeCustomer {\n  private readonly endpoint: string;\n  private readonly axios: AxiosInstance;\n  private readonly headers: Record<string, string>;\n  public readonly authRequired = true;\n\n  /**\n   * Creates an instance of the StripeCustomer class.\n   *\n   * @param {MarketplaceApi} api - The Marketplace API instance providing configuration and request handling.\n   */\n  constructor(api: MarketplaceApi) {\n    this.endpoint = api.endpoint + '/stripe_customer';\n    this.axios = api.axios;\n    this.headers = api.headers;\n  }\n\n  /**\n   * Creates a new Stripe customer.\n   *\n   * @template P\n   * @template EP\n   * @param {P & StripeCustomerCreateParameter} params - Parameters for creating the Stripe customer.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<StripeCustomerResponse<'create', P, EP>>>} - A promise resolving to the created customer details.\n   *\n   * @example\n   * const response = await sdk.stripeCustomer.create({\n   *   stripePaymentMethodId: 'payment-method-id',\n   *   stripeCustomerEmail: 'user@example.com'\n   * });\n   * const customer = response.data;\n   */\n  async create<P extends StripeCustomerCreateParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams?: EP\n  ): Promise<AxiosResponse<StripeCustomerResponse<'create', P, EP>>> {\n    return this.axios.post<StripeCustomerResponse<'create', P, EP>>(\n      `${this.endpoint}/create`,\n      { ...params, ...extraParams },\n      { headers: this.headers }\n    );\n  }\n\n  /**\n   * Adds a payment method to a Stripe customer.\n   *\n   * @template P\n   * @template EP\n   * @param {P & StripeCustomerAddPaymentMethodParameter} params - Parameters for adding a payment method.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<StripeCustomerResponse<'addPaymentMethod', P, EP>>>} - A promise resolving to the updated customer details.\n   *\n   * @example\n   * const response = await sdk.stripeCustomer.addPaymentMethod({\n   *   stripePaymentMethodId: 'payment-method-id'\n   * });\n   * const updatedCustomer = response.data;\n   */\n  async addPaymentMethod<P extends StripeCustomerAddPaymentMethodParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams?: EP\n  ): Promise<AxiosResponse<StripeCustomerResponse<'addPaymentMethod', P, EP>>> {\n    return this.axios.post<StripeCustomerResponse<'addPaymentMethod', P, EP>>(\n      `${this.endpoint}/add_payment_method`,\n      { ...params, ...extraParams },\n      { headers: this.headers }\n    );\n  }\n\n  /**\n   * Deletes a payment method from a Stripe customer.\n   *\n   * @template P\n   * @template EP\n   * @param {P & StripeCustomerDeletePaymentMethodParameter} params - Parameters for deleting the payment method.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<StripeCustomerResponse<'deletePaymentMethod', P>>>} - A promise resolving to the confirmation of deletion.\n   *\n   * @example\n   * const response = await sdk.stripeCustomer.deletePaymentMethod({ customer_id: 'customer-id', payment_method_id: 'payment-method-id' });\n   * const result = response.data;\n   */\n  async deletePaymentMethod<P extends StripeCustomerDeletePaymentMethodParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams?: EP\n  ): Promise<AxiosResponse<StripeCustomerResponse<'deletePaymentMethod', P, EP>>> {\n    return this.axios.post<StripeCustomerResponse<'deletePaymentMethod', P, EP>>(\n      `${this.endpoint}/delete_payment_method`,\n      { ...params, ...extraParams },\n      { headers: this.headers }\n    );\n  }\n}\n\nexport default StripeCustomer;\n","/**\n * @fileoverview Provides the StripePersons class for managing Stripe persons in the Sharetribe Marketplace API.\n * This class includes methods for creating persons associated with Stripe accounts.\n *\n * For more details, refer to the Marketplace API documentation:\n * https://www.sharetribe.com/api-reference/marketplace.html#stripe-persons\n */\n\nimport { AxiosInstance, AxiosResponse } from 'axios';\nimport MarketplaceApi from './index';\nimport { StripePersonsCreateParameter, StripePersonsResponse } from '../../types/marketplace/stripePersons';\nimport { ExtraParameter } from '../../types/sharetribe';\n\n/**\n * Class representing the Stripe Persons API.\n *\n * The Stripe Persons API provides methods for creating persons associated with Stripe accounts, used for compliance and verification purposes.\n */\nclass StripePersons {\n  private readonly endpoint: string;\n  private readonly axios: AxiosInstance;\n  private readonly headers: Record<string, string>;\n  public readonly authRequired = true;\n\n  /**\n   * Creates an instance of the StripePersons class.\n   *\n   * @param {MarketplaceApi} api - The Marketplace API instance providing configuration and request handling.\n   */\n  constructor(api: MarketplaceApi) {\n    this.endpoint = api.endpoint + '/stripe_persons';\n    this.axios = api.axios;\n    this.headers = api.headers;\n  }\n\n  /**\n   * Creates a new person for a Stripe account.\n   *\n   * @template P\n   * @template EP\n   * @param {P & StripePersonsCreateParameter} params - Parameters for creating the Stripe person.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<StripePersonsResponse<'create'>>>} - A promise resolving to the created person details.\n   *\n   * @example\n   * const response = await sdk.stripePersons.create({\n   *   personToken: 'person-token',\n   * });\n   * const personDetails = response.data;\n   */\n  async create<P extends StripePersonsCreateParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams?: EP\n  ): Promise<AxiosResponse<StripePersonsResponse<'create'>>> {\n    return this.axios.post<StripePersonsResponse<'create'>>(\n      `${this.endpoint}/create`,\n      { ...params, ...extraParams },\n      { headers: this.headers }\n    );\n  }\n}\n\nexport default StripePersons;\n","/**\n * @fileoverview Provides the StripeSetupIntents class for managing Stripe Setup Intents in the Sharetribe Marketplace API.\n * This class includes methods for creating Stripe Setup Intents to set up payment methods for future use.\n *\n * For more details, refer to the Marketplace API documentation:\n * https://www.sharetribe.com/api-reference/marketplace.html#create-stripe-person\n */\n\nimport { AxiosInstance, AxiosResponse } from 'axios';\nimport MarketplaceApi from './index';\nimport {\n  StripeSetupIntentsCreateParameter,\n  StripeSetupIntentsResponse,\n} from '../../types/marketplace/stripeSetupIntents';\nimport { ExtraParameter } from '../../types/sharetribe';\n\n/**\n * Class representing the Stripe Setup Intents API.\n *\n * The Stripe Setup Intents API provides methods to securely create Setup Intents for Stripe payments.\n */\nclass StripeSetupIntents {\n  private readonly endpoint: string;\n  private readonly axios: AxiosInstance;\n  public readonly authRequired = true;\n\n  /**\n   * Creates an instance of the StripeSetupIntents class.\n   *\n   * @param {MarketplaceApi} api - The Marketplace API instance providing configuration and request handling.\n   */\n  constructor(api: MarketplaceApi) {\n    this.endpoint = api.endpoint + '/stripe_setup_intents';\n    this.axios = api.axios;\n  }\n\n  /**\n   * Creates a new Stripe Setup Intent.\n   *\n   * @template P\n   * @template EP\n   * @param {P & StripeSetupIntentsCreateParameter} params - Parameters required to create the Stripe Setup Intent.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<StripeSetupIntentsResponse<'create'>>>} - A promise resolving to the created Setup Intent details.\n   *\n   * @example\n   * const response = await sdk.stripeSetupIntents.create({});\n   * const setupIntentDetails = response.data;\n   */\n  async create<P extends StripeSetupIntentsCreateParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams?: EP\n  ): Promise<AxiosResponse<StripeSetupIntentsResponse<'create'>>> {\n    return this.axios.post<StripeSetupIntentsResponse<'create'>>(\n      `${this.endpoint}/create`,\n      { ...params, ...extraParams }\n    );\n  }\n}\n\nexport default StripeSetupIntents;\n","/**\n * @fileoverview Provides the TimeSlots class for managing time slots in the Sharetribe Marketplace API.\n * This class includes methods for querying available time slots for marketplace resources.\n *\n * For more details, refer to the Marketplace API documentation:\n * https://www.sharetribe.com/api-reference/marketplace.html#time-slots\n */\n\nimport { AxiosInstance, AxiosResponse } from 'axios';\nimport MarketplaceApi from './index';\nimport { TimeSlotsQueryParameter, TimeSlotsResponse } from '../../types/marketplace/timeSlots';\n\n/**\n * Class representing the Time Slots API.\n *\n * The Time Slots API provides methods for querying available time slots for bookings.\n */\nclass TimeSlots {\n  private readonly endpoint: string;\n  private readonly axios: AxiosInstance;\n  private readonly headers: Record<string, string>;\n\n  /**\n   * Creates an instance of the TimeSlots class.\n   *\n   * @param {MarketplaceApi} api - The Marketplace API instance providing configuration and request handling.\n   */\n  constructor(api: MarketplaceApi) {\n    this.endpoint = api.endpoint + '/timeslots';\n    this.axios = api.axios;\n    this.headers = api.headers;\n  }\n\n  /**\n   * Queries available time slots based on specified filters.\n   *\n   * @template P\n   * @param {P & TimeSlotsQueryParameter} params - Query parameters for filtering time slots.\n   * @returns {Promise<AxiosResponse<TimeSlotsResponse<'query'>>>} - A promise resolving to the query results.\n   *\n   * @example\n   * const response = await sdk.timeSlots.query({\n   *   listingId: 'listing-id',\n   *   start: '2024-01-01T00:00:00Z',\n   *   end: '2024-01-07T23:59:59Z',\n   * });\n   * const timeSlots = response.data;\n   */\n  async query<P extends TimeSlotsQueryParameter>(\n    params: P\n  ): Promise<AxiosResponse<TimeSlotsResponse<'query'>>> {\n    return this.axios.get<TimeSlotsResponse<'query'>>(`${this.endpoint}/query`, {\n      headers: this.headers,\n      params,\n    });\n  }\n}\n\nexport default TimeSlots;\n","/**\n * @fileoverview Provides the Transactions class for managing transactions in the Sharetribe Marketplace API.\n * This class includes methods for querying, initiating, transitioning, and managing transactions.\n *\n * For more details, refer to the Marketplace API documentation:\n * https://www.sharetribe.com/api-reference/marketplace.html#transactions\n */\n\nimport { AxiosInstance, AxiosResponse } from 'axios';\nimport MarketplaceApi from './index';\nimport {\n  TransactionsInitiateParameter,\n  TransactionsInitiateSpeculativeParameter,\n  TransactionsQueryParameter,\n  TransactionsResponse,\n  TransactionsShowParameter,\n  TransactionsTransitionParameter,\n  TransactionsTransitionSpeculativeParameter,\n} from '../../types/marketplace/transaction';\nimport { ExtraParameter } from '../../types/sharetribe';\n\n/**\n * Class representing the Transactions API.\n *\n * The Transactions API provides methods for managing marketplace transactions, including querying, initiating, and transitioning them.\n */\nclass Transactions {\n  private readonly endpoint: string;\n  private readonly axios: AxiosInstance;\n  private readonly headers: Record<string, string>;\n  public readonly authRequired = true;\n\n  /**\n   * Creates an instance of the Transactions class.\n   *\n   * @param {MarketplaceApi} api - The Marketplace API instance providing configuration and request handling.\n   */\n  constructor(api: MarketplaceApi) {\n    this.endpoint = api.endpoint + '/transactions';\n    this.axios = api.axios;\n    this.headers = api.headers;\n  }\n\n  /**\n   * Retrieves details of a specific transaction.\n   *\n   * @template P\n   * @param {P & TransactionsShowParameter} params - Parameters to identify the transaction.\n   * @returns {Promise<AxiosResponse<TransactionsResponse<'show', P>>>} - A promise resolving to the transaction details.\n   *\n   * @example\n   * const response = await sdk.transactions.show({ id: 'transaction-id' });\n   * const transactionDetails = response.data;\n   */\n  async show<P extends TransactionsShowParameter>(\n    params: P\n  ): Promise<AxiosResponse<TransactionsResponse<'show', P>>> {\n    return this.axios.get<TransactionsResponse<'show', P>>(`${this.endpoint}/show`, {\n      headers: this.headers,\n      params,\n    });\n  }\n\n  /**\n   * Queries transactions based on specified filters.\n   *\n   * @template P\n   * @param {P & TransactionsQueryParameter} params - Query parameters for filtering transactions.\n   * @returns {Promise<AxiosResponse<TransactionsResponse<'query', P>>>} - A promise resolving to the query results.\n   *\n   * @example\n   * const response = await sdk.transactions.query({ perPage: 10 });\n   * const transactions = response.data;\n   */\n  async query<P extends TransactionsQueryParameter>(\n    params: P\n  ): Promise<AxiosResponse<TransactionsResponse<'query', P>>> {\n    return this.axios.get<TransactionsResponse<'query', P>>(`${this.endpoint}/query`, {\n      headers: this.headers,\n      params,\n    });\n  }\n\n  /**\n   * Initiates a new transaction.\n   *\n   * @template P\n   * @template EP\n   * @param {P & TransactionsInitiateParameter} params - Parameters for initiating the transaction.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<TransactionsResponse<'initiate', P, EP>>>} - A promise resolving to the initiated transaction details.\n   *\n   * @example\n   * const response = await sdk.transactions.initiate({\n   *   processAlias: 'order',\n   *   transition: 'start',\n   *   params: {}\n   * });\n   * const initiatedTransaction = response.data;\n   */\n  async initiate<P extends TransactionsInitiateParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams?: EP\n  ): Promise<AxiosResponse<TransactionsResponse<'initiate', P, EP>>> {\n    return this.axios.post<TransactionsResponse<'initiate', P, EP>>(\n      `${this.endpoint}/initiate`,\n      { ...params, ...extraParams },\n      { headers: this.headers }\n    );\n  }\n\n  /**\n   * Initiates a speculative transaction.\n   *\n   * @template P\n   * @template EP\n   * @param {P & TransactionsInitiateSpeculativeParameter} params - Parameters for the speculative transaction initiation.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<TransactionsResponse<'initiateSpeculative', P, EP>>>} - A promise resolving to the speculative transaction details.\n   *\n   * @example\n   * const response = await sdk.transactions.initiateSpeculative({\n   *   processAlias: 'order',\n   *   transition: 'start',\n   *   params: {}\n   * });\n   * const speculativeTransaction = response.data;\n   */\n  async initiateSpeculative<P extends TransactionsInitiateSpeculativeParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams?: EP\n  ): Promise<AxiosResponse<TransactionsResponse<'initiateSpeculative', P, EP>>> {\n    return this.axios.post<TransactionsResponse<'initiateSpeculative', P, EP>>(\n      `${this.endpoint}/initiate_speculative`,\n      { ...params, ...extraParams },\n      { headers: this.headers }\n    );\n  }\n\n  /**\n   * Transitions an existing transaction.\n   *\n   * @template P\n   * @template EP\n   * @param {P & TransactionsTransitionParameter} params - Parameters for transitioning the transaction.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<TransactionsResponse<'transition', P, EP>>>} - A promise resolving to the transitioned transaction details.\n   *\n   * @example\n   * const response = await sdk.transactions.transition({\n   *   id: 'transaction-id',\n   *   transition: 'complete',\n   *   params: { review: 5 }\n   * });\n   * const transitionedTransaction = response.data;\n   */\n  async transition<P extends TransactionsTransitionParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams?: EP\n  ): Promise<AxiosResponse<TransactionsResponse<'transition', P, EP>>> {\n    return this.axios.post<TransactionsResponse<'transition', P, EP>>(\n      `${this.endpoint}/transition`,\n      { ...params, ...extraParams },\n      { headers: this.headers }\n    );\n  }\n\n  /**\n   * Transitions a speculative transaction.\n   *\n   * @template P\n   * @template EP\n   * @param {P & TransactionsTransitionSpeculativeParameter} params - Parameters for the speculative transaction transition.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<TransactionsResponse<'transitionSpeculative', P, EP>>>} - A promise resolving to the speculative transitioned transaction details.\n   *\n   * @example\n   * const response = await sdk.transactions.transitionSpeculative({\n   *   id: 'transaction-id',\n   *   transition: 'complete',\n   *   params: { review: 5 }\n   * });\n   * const speculativeTransitionedTransaction = response.data;\n   */\n  async transitionSpeculative<P extends TransactionsTransitionSpeculativeParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams?: EP\n  ): Promise<AxiosResponse<TransactionsResponse<'transitionSpeculative', P, EP>>> {\n    return this.axios.post<TransactionsResponse<'transitionSpeculative', P, EP>>(\n      `${this.endpoint}/transition_speculative`,\n      { ...params, ...extraParams },\n      { headers: this.headers }\n    );\n  }\n}\n\nexport default Transactions;\n","/**\n * @fileoverview Provides the Users class for managing user data in the Sharetribe Marketplace API.\n * This class includes methods for retrieving details about a specific user.\n *\n * For more details, refer to the Marketplace API documentation:\n * https://www.sharetribe.com/api-reference/marketplace.html#show-user\n */\n\nimport { AxiosInstance, AxiosResponse } from 'axios';\nimport MarketplaceApi from './index';\nimport { UsersResponse, UsersShowParameter } from '../../types/marketplace/user';\n\n/**\n * Class representing the Users API.\n *\n * The Users API provides methods for managing user data in the marketplace.\n */\nclass Users {\n  private readonly endpoint: string;\n  private readonly axios: AxiosInstance;\n  private readonly headers: Record<string, string>;\n\n  /**\n   * Creates an instance of the Users class.\n   *\n   * @param {MarketplaceApi} api - The Marketplace API instance providing configuration and request handling.\n   */\n  constructor(api: MarketplaceApi) {\n    this.endpoint = api.endpoint + '/users';\n    this.axios = api.axios;\n    this.headers = api.headers;\n  }\n\n  /**\n   * Retrieves details of a specific user.\n   *\n   * @template P\n   * @param {P & UsersShowParameter} params - Parameters to identify the user.\n   * @returns {Promise<AxiosResponse<UsersResponse<'show', P>>>} - A promise resolving to the user details.\n   *\n   * @example\n   * const response = await sdk.users.show({\n   *   id: 'user-id',\n   * });\n   * const userDetails = response.data;\n   */\n  async show<P extends UsersShowParameter>(\n    params: P\n  ): Promise<AxiosResponse<UsersResponse<'show', P>>> {\n    return this.axios.get<UsersResponse<'show', P>>(`${this.endpoint}/show`, {\n      headers: this.headers,\n      params,\n    });\n  }\n}\n\nexport default Users;\n","/**\n * @fileoverview Provides the MarketplaceApi class for accessing all available endpoints in the Sharetribe Marketplace API.\n * This class serves as the entry point for interacting with various resources such as listings, bookings, users, and payments.\n *\n * For more details, refer to the Marketplace API documentation:\n * https://www.sharetribe.com/api-reference/marketplace.html\n */\n\nimport SharetribeSdk from '../../sdk';\nimport { AxiosInstance } from 'axios';\nimport AvailabilityExceptions from './AvailabilityExceptions';\nimport Listings from './Listings';\nimport Bookings from './Bookings';\nimport CurrentUser from './CurrentUser';\nimport Images from './Images';\nimport Marketplace from './Marketplace';\nimport Messages from './Messages';\nimport OwnListings from './OwnListings';\nimport PasswordReset from './PasswordReset';\nimport ProcessTransitions from './ProcessTransitions';\nimport Reviews from './Reviews';\nimport Stock from './Stock';\nimport StockAdjustments from './StockAdjustments';\nimport StripeAccount from './StripeAccount';\nimport StripeAccountLinks from './StripeAccountLinks';\nimport StripeCustomer from './StripeCustomer';\nimport StripePersons from './StripePersons';\nimport StripeSetupIntents from './StripeSetupIntents';\nimport TimeSlots from './TimeSlots';\nimport Transactions from './Transactions';\nimport Users from './Users';\n\n/**\n * Class representing the Sharetribe Marketplace API.\n *\n * This class provides access to all available endpoints in the Sharetribe Marketplace API, enabling operations such as managing listings,\n * handling transactions, updating user profiles, and integrating with Stripe.\n */\nclass MarketplaceApi {\n  axios: AxiosInstance;\n  endpoint: string;\n  headers: Record<string, string>;\n  authRequired: boolean;\n\n  // API Endpoints\n  availabilityExceptions: AvailabilityExceptions;\n  bookings: Bookings;\n  currentUser: CurrentUser;\n  images: Images;\n  listings: Listings;\n  marketplace: Marketplace;\n  messages: Messages;\n  ownListings: OwnListings;\n  passwordReset: PasswordReset;\n  processTransitions: ProcessTransitions;\n  reviews: Reviews;\n  stock: Stock;\n  stockAdjustments: StockAdjustments;\n  stripeAccount: StripeAccount;\n  stripeAccountLinks: StripeAccountLinks;\n  stripeCustomer: StripeCustomer;\n  stripePersons: StripePersons;\n  stripeSetupIntents: StripeSetupIntents;\n  timeslots: TimeSlots;\n  transactions: Transactions;\n  users: Users;\n\n  /**\n   * Creates an instance of the MarketplaceApi class.\n   *\n   * @param {SharetribeSdk} sdk - The Sharetribe SDK instance providing configuration and request handling.\n   */\n  constructor(sdk: SharetribeSdk) {\n    const config = sdk.apisConfigs.api(sdk.sdkConfig);\n    this.endpoint = config.baseUrl;\n    this.headers = config.headers;\n    this.axios = sdk.axios;\n    this.authRequired = false;\n\n    // Initialize all API endpoints\n    this.availabilityExceptions = new AvailabilityExceptions(this);\n    this.bookings = new Bookings(this);\n    this.currentUser = new CurrentUser(this);\n    this.images = new Images(this);\n    this.listings = new Listings(this);\n    this.marketplace = new Marketplace(this);\n    this.messages = new Messages(this);\n    this.ownListings = new OwnListings(this);\n    this.passwordReset = new PasswordReset(this);\n    this.processTransitions = new ProcessTransitions(this);\n    this.reviews = new Reviews(this);\n    this.stock = new Stock(this);\n    this.stockAdjustments = new StockAdjustments(this);\n    this.stripeAccount = new StripeAccount(this);\n    this.stripeAccountLinks = new StripeAccountLinks(this);\n    this.stripeCustomer = new StripeCustomer(this);\n    this.stripePersons = new StripePersons(this);\n    this.stripeSetupIntents = new StripeSetupIntents(this);\n    this.timeslots = new TimeSlots(this);\n    this.transactions = new Transactions(this);\n    this.users = new Users(this);\n  }\n}\n\nexport default MarketplaceApi;\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","/**\n * @fileoverview Provides the UUID class for handling universally unique identifiers (UUIDs).\n * This class allows for the creation and validation of UUIDs, using the `uuid` library.\n */\n\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Class representing a UUID (Universally Unique Identifier).\n *\n * The UUID class ensures that a valid UUID is created or used, with the option to generate one if none is provided.\n */\nclass UUID {\n  uuid: string;\n  readonly _sdkType: 'UUID';\n\n  /**\n   * Creates an instance of the UUID class.\n   *\n   * @param {string} [uuid] - An optional UUID string. If not provided, a new UUID will be generated.\n   * @example\n   * const id = new UUID();\n   * console.log(id.toString()); // Outputs a newly generated UUID.\n   *\n   * const predefinedId = new UUID('123e4567-e89b-12d3-a456-426614174000');\n   * console.log(predefinedId.toString()); // Outputs: '123e4567-e89b-12d3-a456-426614174000'\n   */\n  constructor(uuid?: string) {\n    this._sdkType = 'UUID';\n\n    if (uuid !== undefined && typeof uuid !== 'string') {\n      console.warn('uuid must be a string');\n      // If it's not a string, fallback to a generated UUID.\n      this.uuid = uuidv4();\n    } else {\n      // Use the provided UUID or generate a new one.\n      this.uuid = uuid || uuidv4();\n    }\n  }\n\n  /**\n   * Converts the UUID instance to its string representation.\n   *\n   * @returns {string} - The string representation of the UUID.\n   * @example\n   * const id = new UUID();\n   * console.log(id.toString()); // Outputs the UUID as a string.\n   */\n  toString(): string {\n    return this.uuid;\n  }\n}\n\nexport default UUID;\n","/**\n * @fileoverview Provides the LatLng class for representing geographical coordinates.\n * This class encapsulates a latitude and longitude pair, with validation for numeric input.\n */\n\n/**\n * Class representing a geographical coordinate pair (latitude and longitude).\n */\nclass LatLng {\n  lat: number | string;\n  lng: number | string;\n  value: string;\n  readonly _sdkType: 'LatLng';\n\n  /**\n   * Creates an instance of the LatLng class.\n   *\n   * @param {string | number} lat - The latitude value. Must be a number or a string that represents a number.\n   * @param {string | number} lng - The longitude value. Must be a number or a string that represents a number.\n   * @example\n   * const coordinates = new LatLng(37.7749, -122.4194);\n   * console.log(coordinates.toString()); // Outputs: '37.7749,-122.4194'\n   */\n  constructor(lat: string | number, lng: string | number) {\n    this._sdkType = 'LatLng';\n\n    // Helper function to validate if a value is a number or a number-like string.\n    const isNumberOrNumberString = (val: any): boolean => {\n      if (typeof val === 'number') return true;\n      return typeof val === 'string' && /^\\d+(\\.\\d+)?$/.test(val);\n    };\n\n    // Validate latitude.\n    if (!isNumberOrNumberString(lat)) {\n      console.warn(\n        \"Latitude must be a number or a string that represents a number\"\n      );\n    }\n\n    // Validate longitude.\n    if (!isNumberOrNumberString(lng)) {\n      console.warn(\n        \"Longitude must be a number or a string that represents a number\"\n      );\n    }\n\n    // Assign values to instance properties.\n    this.lat = lat;\n    this.lng = lng;\n    this.value = `${this.lat},${this.lng}`;\n  }\n\n  /**\n   * Converts the LatLng instance to a string representation.\n   *\n   * @returns {string} - A string in the format \"latitude,longitude\".\n   * @example\n   * const coordinates = new LatLng(37.7749, -122.4194);\n   * console.log(coordinates.toString()); // Outputs: '37.7749,-122.4194'\n   */\n  toString(): string {\n    return `${this.lat},${this.lng}`;\n  }\n}\n\nexport default LatLng;\n","/**\n * @fileoverview Provides the LatLngBounds class for representing geographical bounding boxes.\n * This class encapsulates a northeast (NE) and southwest (SW) pair of coordinates to define a rectangular area.\n */\n\nimport LatLng from './LatLng';\n\n/**\n * Class representing a geographical bounding box with NE and SW coordinates.\n */\nclass LatLngBounds {\n  ne: LatLng | { lat: number | string; lng: number | string };\n  sw: LatLng | { lat: number | string; lng: number | string };\n  value: string;\n  readonly _sdkType: 'LatLngBounds';\n\n  /**\n   * Creates an instance of the LatLngBounds class.\n   *\n   * @param {LatLng | { lat: number; lng: number }} ne - The northeast coordinate.\n   * @param {LatLng | { lat: number; lng: number }} sw - The southwest coordinate.\n   * @example\n   * const ne = new LatLng(40.7128, -74.0060);\n   * const sw = new LatLng(34.0522, -118.2437);\n   * const bounds = new LatLngBounds(ne, sw);\n   * console.log(bounds.toString()); // Outputs: '40.7128,-74.0060,34.0522,-118.2437'\n   */\n  constructor(\n    ne: LatLng | { lat: number; lng: number },\n    sw: LatLng | { lat: number; lng: number }\n  ) {\n    this._sdkType = 'LatLngBounds';\n\n    let isValid = true;\n\n    // Helper function to check if a value is an object with numeric lat/lng.\n    const isLatLngObject = (val: any): boolean =>\n      val &&\n      typeof val === 'object' &&\n      typeof val.lat === 'number' &&\n      typeof val.lng === 'number';\n\n    // Validate the northeast (NE) coordinate.\n    let neLatLng: LatLng;\n    if (ne instanceof LatLng) {\n      neLatLng = ne;\n    } else if (isLatLngObject(ne)) {\n      neLatLng = new LatLng(ne.lat, ne.lng);\n    } else {\n      console.warn(\n        \"Invalid 'ne' value. Must be an instance of LatLng or an object with lat and lng numbers.\"\n      );\n      isValid = false;\n      neLatLng = new LatLng(Number(ne.lat), Number(ne.lng));\n    }\n\n    // Validate the southwest (SW) coordinate.\n    let swLatLng: LatLng;\n    if (sw instanceof LatLng) {\n      swLatLng = sw;\n    } else if (isLatLngObject(sw)) {\n      swLatLng = new LatLng(sw.lat, sw.lng);\n    } else {\n      console.warn(\n        \"Invalid 'sw' value. Must be an instance of LatLng or an object with lat and lng numbers.\"\n      );\n      isValid = false;\n      swLatLng = new LatLng(Number(sw.lat), Number(sw.lng));\n    }\n\n    this.ne = neLatLng;\n    this.sw = swLatLng;\n    this.value = `${this.ne.toString()},${this.sw.toString()}`;\n\n    if (!isValid) {\n      console.warn(\n        \"LatLngBounds must be an object with valid NE and SW values.\"\n      );\n    }\n  }\n\n  /**\n   * Converts the LatLngBounds instance to a string representation.\n   *\n   * @returns {string} - A string in the format \"NE_lat,NE_lng,SW_lat,SW_lng\".\n   * @example\n   * const ne = new LatLng(40.7128, -74.0060);\n   * const sw = new LatLng(34.0522, -118.2437);\n   * const bounds = new LatLngBounds(ne, sw);\n   * console.log(bounds.toString()); // Outputs: '40.7128,-74.0060,34.0522,-118.2437'\n   */\n  toString(): string {\n    return `${this.ne.toString()},${this.sw.toString()}`;\n  }\n}\n\nexport default LatLngBounds;\n","import UUID from '../sdkTypes/UUID';\nimport LatLng from '../sdkTypes/LatLng';\nimport LatLngBounds from '../sdkTypes/LatLngBounds';\n\nconst UNKNOWN_TYPE = 'unknown-type';\n\n/**\n * Serializes a value into a string representation for URL query parameters.\n *\n * @param {*} value - The value to serialize. Supported types:\n *   - `UUID` instance: serialized as its `uuid` string.\n *   - `LatLng` instance: serialized as \"lat,lng\".\n *   - `LatLngBounds` instance: serialized as \"ne.lat,ne.lng,sw.lat,sw.lng\".\n *   - `Array`: serialized by recursively serializing each element.\n *   - `Date`: serialized as an ISO string.\n *   - Primitive types and `null`: returned as-is.\n * @throws {Error} Will throw an error if the value type is unsupported.\n * @returns {string|*} The serialized value.\n */\nexport const serializeValue = (value: any) => {\n  let v: any;\n\n  if (value instanceof UUID) {\n    v = value.uuid;\n  } else if (value instanceof LatLng) {\n    v = `${value.lat},${value.lng}`;\n  } else if (value instanceof LatLngBounds) {\n    v = `${value.ne.lat},${value.ne.lng},${value.sw.lat},${value.sw.lng}`;\n  } else if (Array.isArray(value)) {\n    v = value.map(serializeValue);\n  } else if (value instanceof Date) {\n    v = value.toISOString();\n  } else if (value === null) {\n    v = value;\n  } else if (typeof value !== 'object') {\n    v = value;\n  } else {\n    throw new Error(UNKNOWN_TYPE);\n  }\n\n  return v;\n};\n\n/**\n * Serializes a record of parameters into a query string.\n *\n * @param {Record<string, any>} params - The parameters to serialize. Each value is serialized\n *   using the `serializeValue` function.\n * @returns {string} A URL-encoded query string.\n */\nfunction parameterSerializer(params: Record<string, any>): string {\n  const serializedParams = new URLSearchParams();\n  Object.entries(params).forEach(([key, value]) => {\n    serializedParams.append(key, serializeValue(value));\n  });\n  return serializedParams.toString();\n}\n\nexport default parameterSerializer;\n","/**\n * @fileoverview Provides the Money class for handling monetary values.\n * This class ensures proper structure and validation of monetary values with an amount and a currency.\n */\n\n/**\n * Class representing a monetary value.\n *\n * The Money class encapsulates an amount in the smallest unit of the currency (e.g., cents)\n * and a currency code (e.g., \"USD\").\n */\nclass Money {\n  amount: number;\n  currency: string;\n  readonly _sdkType: 'Money';\n\n  /**\n   * Creates an instance of the Money class.\n   *\n   * @param {number} amount - The monetary amount, represented in the smallest unit of the currency (e.g., cents for USD).\n   * @param {string} currency - The currency code, represented as a three-character string (e.g., \"USD\").\n   * @example\n   * const money = new Money(1000, 'USD');\n   * console.log(money); // Outputs: Money { amount: 1000, currency: 'USD' }\n   */\n  constructor(amount: number, currency: string) {\n    this._sdkType = 'Money';\n\n    let isValid = true;\n\n    // Validate the amount.\n    if (!Number.isInteger(amount)) {\n      console.warn('Amount must be an integer.');\n      isValid = false;\n    }\n\n    // Validate the currency code.\n    if (currency.length < 3) {\n      console.warn('Currency must be at least 3 characters long.');\n      isValid = false;\n    }\n\n    this.amount = amount;\n    this.currency = currency;\n\n    if (!isValid) {\n      console.warn('Invalid Money values provided.');\n    }\n  }\n}\n\nexport default Money;\n","import Money from '../sdkTypes/Money';\nimport LatLng from '../sdkTypes/LatLng';\nimport LatLngBounds from '../sdkTypes/LatLngBounds';\nimport UUID from '../sdkTypes/UUID';\nimport SharetribeSdk from '../sdk';\nimport IntegrationSdk from \"../integrationSdk\";\nimport BigDecimal from \"../sdkTypes/BigDecimal\";\n\n/**\n * Converts a plain object with `amount` and `currency` to a `Money` instance.\n *\n * @param {Object} value - The value object containing amount and currency.\n * @param {number} value.amount - The monetary amount.\n * @param {string} value.currency - The currency code.\n * @returns {Money} A `Money` instance.\n */\nexport function convertToMoney(value: { amount: number, currency: string }): Money {\n  return new Money(value.amount, value.currency);\n}\n\n/**\n * Converts a plain object with `lat` and `lng` to a `LatLng` instance.\n *\n * @param {Object} value - The value object containing latitude and longitude.\n * @param {number} value.lat - Latitude value.\n * @param {number} value.lng - Longitude value.\n * @returns {LatLng} A `LatLng` instance.\n */\nexport function convertToLatLng(value: { lat: number, lng: number }): LatLng {\n  return new LatLng(value.lat, value.lng);\n}\n\n/**\n * Converts northeast and southwest coordinate objects to a `LatLngBounds` instance.\n *\n * @param {Object} ne - The northeast coordinates.\n * @param {number} ne.lat - Latitude value.\n * @param {number} ne.lng - Longitude value.\n * @param {Object} sw - The southwest coordinates.\n * @param {number} sw.lat - Latitude value.\n * @param {number} sw.lng - Longitude value.\n * @returns {LatLngBounds} A `LatLngBounds` instance.\n */\nexport function convertToLatLngBounds(ne: { lat: number, lng: number }, sw: {\n  lat: number,\n  lng: number\n}): LatLngBounds {\n  return new LatLngBounds(ne, sw);\n}\n\n/**\n * Converts a string or Date object to a `Date` instance.\n *\n * @param {string|Date} value - The input value to convert.\n * @returns {Date} A `Date` instance.\n */\nexport function convertToDate(value: string | Date): Date {\n  return new Date(value);\n}\n\n/**\n * Converts a value based on its key to the appropriate SDK type.\n *\n * @param {string} key - The key indicating the value's type.\n * @param {*} value - The value to convert.\n * @returns {*} The converted value or the original value if no conversion is needed.\n * @throws Will throw an error if the `id` key has an invalid value.\n */\nexport function convertTypes(key: string, value: any): any {\n  if (value === null || value === undefined) {\n    return value;\n  }\n\n  if (key === 'id') {\n    if (typeof value === 'string') {\n      return new UUID(value);\n    }\n    if (value instanceof Object) {\n      if ('uuid' in value) {\n        return new UUID(value.uuid);\n      }\n    }\n    throw new Error('Invalid id');\n  }\n  if (['price', 'payinTotal', 'payoutTotal', 'lineTotal', 'unitPrice'].includes(key)) {\n    return convertToMoney(value);\n  }\n  if (['start', 'end', 'displayStart', 'displayEnd', 'createdAt', 'at', 'expiresAt'].includes(key)) {\n    return convertToDate(value);\n  }\n\n  if (['geolocation'].includes(key)) {\n    return convertToLatLng(value);\n  }\n\n  if (value instanceof Object) {\n    if (Object.keys(value).length === 2 && 'lat' in value && 'lng' in value) {\n      return convertToLatLng(value);\n    }\n    if (Object.keys(value).length === 2 && 'ne' in value && 'sw' in value) {\n      return convertToLatLngBounds(value.ne, value.sw);\n    }\n    if (Object.keys(value).length === 2 && 'amount' in value && 'currency' in value) {\n      return convertToMoney(value);\n    }\n  }\n\n  return value;\n}\n\n/**\n * Converts a value based on its `_sdkType` property to the appropriate SDK type.\n * @param {*} value - The value to convert.\n * @returns {*} The converted value or the original value if no conversion is needed.\n */\nexport function toSdkTypes(value: any): LatLng | LatLngBounds | UUID | Money | BigDecimal | any {\n  const type = value && value._sdkType;\n\n  switch (type) {\n    case 'LatLng':\n      return new LatLng(value.lat, value.lng);\n    case 'LatLngBounds':\n      return new LatLngBounds(value.ne, value.sw);\n    case 'UUID':\n      return new UUID(value.uuid);\n    case 'Money':\n      return new Money(value.amount, value.currency);\n    case 'BigDecimal':\n      return new BigDecimal(value.value);\n    default:\n      return value;\n  }\n}\n\n/**\n * Recursively converts all values in an object from SDK types to plain objects.\n *\n * @param {Object} value - The object to process.\n */\nexport function recursiveConvertToSdkTypes(value: { [key: string]: any }) {\n  Object.keys(value).forEach(key => {\n    if (value[key] instanceof Object) {\n      recursiveConvertToSdkTypes(value[key]);\n    }\n    value[key] = convertTypes(key, value[key]);\n  })\n}\n\n/**\n * Recursively converts all values in an object from SDK types to plain objects.\n *\n * @param {Object} value - The object to process.\n */\nexport function convertFromSdkTypes(value: any) {\n  if (value === null || value === undefined) {\n    return value;\n  }\n\n  if (value instanceof UUID) {\n    return value.uuid;\n  }\n\n  if (value instanceof LatLng) {\n    return {lat: value.lat, lng: value.lng};\n  }\n\n  if (value instanceof LatLngBounds) {\n    return {ne: value.ne, sw: value.sw};\n  }\n\n  if (value instanceof Money) {\n    return {amount: value.amount, currency: value.currency};\n  }\n\n  if (value instanceof Date) {\n    return value.toISOString();\n  }\n\n  return value;\n}\n\n/**\n * Recursively converts all values in an object from SDK types to plain objects.\n *\n * @param {Object} value - The object to process.\n */\nexport function recursiveConvertFromSdkTypes(value: { [key: string]: any }) {\n  Object.keys(value).forEach(key => {\n    if (value[key] instanceof Object) {\n      recursiveConvertFromSdkTypes(value[key]);\n    }\n    value[key] = convertFromSdkTypes(value[key]);\n  })\n}\n\n/**\n * Recursively applies a handler function to all values in an object.\n *\n * @param {Object} value - The object to process.\n * @param {Function} handler - The handler function to apply.\n */\nexport function recursiveApplyHandler(value: { [key: string]: any }, handler: any) {\n  Object.keys(value).forEach(key => {\n    if (value[key] instanceof Object) {\n      recursiveApplyHandler(value[key], handler);\n    }\n    value[key] = handler({key, value: value[key]});\n  })\n}\n\n/**\n * Converts raw data into SDK-compatible types, applying type handlers if configured.\n *\n * @param {Object} data - The raw data to convert.\n * @param {SharetribeSdk|IntegrationSdk} sdk - The SDK instance to use.\n */\nexport function dataToType(data: any, sdk: SharetribeSdk | IntegrationSdk) {\n  recursiveConvertToSdkTypes(data);\n\n  const {typeHandlers} = sdk.sdkConfig\n\n  if (typeHandlers) {\n    typeHandlers.forEach(handler => {\n      recursiveApplyHandler(data, ({key, value}: { key: string, value: any }) => {\n        if (handler.sdkType && handler.appType && handler.reader) {\n          // @ts-ignore\n          if (value instanceof handler.sdkType) {\n            return handler.reader(value) as typeof handler.appType;\n          } else {\n            return value;\n          }\n        }\n\n        if (handler.canHandle && handler.appType && handler.reader) {\n          if (handler.canHandle({key, value})) {\n            return handler.reader(value) as typeof handler.appType;\n          } else {\n            return value;\n          }\n        }\n      });\n    })\n  }\n}\n\n/**\n * Converts SDK-compatible types into plain data, applying type handlers if configured.\n *\n * @param {Object} data - The SDK-compatible data to convert.\n * @param {SharetribeSdk|IntegrationSdk} sdk - The SDK instance to use.\n */\nexport function typeToData(data: any, sdk: SharetribeSdk | IntegrationSdk) {\n  recursiveConvertFromSdkTypes(data);\n\n  const {typeHandlers} = sdk.sdkConfig\n\n  if (typeHandlers) {\n    typeHandlers.forEach(handler => {\n      recursiveApplyHandler(data, ({key, value}: { key: string, value: any }) => {\n        if (handler.sdkType && handler.appType && handler.writer) {\n          if (value instanceof handler.appType) {\n            return handler.writer!(value) as typeof handler.sdkType;\n          }\n        }\n\n        if (handler.canHandle && handler.appType && handler.writer) {\n          if (handler.canHandle({key, value})) {\n            return handler.writer!(value) as typeof handler.sdkType;\n          }\n        }\n      });\n    })\n  }\n}","import {AxiosError, AxiosResponse, InternalAxiosRequestConfig} from 'axios';\nimport {ExtendedInternalAxiosRequestConfig} from '../types/axios';\nimport SharetribeSdk from '../sdk';\nimport parameterSerializer from './parameter-serializer';\nimport {dataToType, typeToData} from './convert-types';\nimport IntegrationSdk from \"../integrationSdk\";\n\nexport const QUERY_PARAMETERS = [\n  'include',\n  'page',\n  'perPage',\n  'expand',\n  'fields',\n  'limit',\n]\n\n// Utility functions\nexport const isTokenUnauthorized = (status: number) => [401].includes(status);\nexport const isTokenExpired = (status: number) => [401, 403].includes(status);\nexport const routeNeedsTrustedUser = (requestConfig: InternalAxiosRequestConfig, sdk: SharetribeSdk | IntegrationSdk) => {\n  const requestUrl = requestConfig.url!;\n  const found = Object.entries(sdk).find(([_, value]) => {\n    if (typeof value === \"object\") {\n      return Object.entries(value).find(([key, endpoint]) => {\n        if (key === 'endpoint' && typeof endpoint === \"string\") {\n          return requestUrl.substring(0, requestUrl.lastIndexOf('/')) === endpoint;\n        }\n      });\n    }\n  }) as [string, { authRequired: boolean }] | undefined;\n  return found && found[1].authRequired;\n}\nexport const prepareAuthorizationHeader = (data: any) => `${data.token_type} ${data.access_token}`;\n\n// Interceptor handlers\nexport function handleResponseSuccess(sdk: SharetribeSdk | IntegrationSdk) {\n  return function onFulfilled(response: AxiosResponse): AxiosResponse {\n    const {data} = response;\n\n    if (data?.access_token) {\n      sdk.sdkConfig.tokenStore!.setToken(data);\n    }\n    if (data?.revoked) {\n      sdk.sdkConfig.tokenStore!.removeToken();\n    }\n\n    dataToType(data, sdk);\n\n    return response;\n  };\n}\n\nexport async function handleResponseFailure(sdk: SharetribeSdk | IntegrationSdk, error: AxiosError | any) {\n  const originalRequest = error.config as ExtendedInternalAxiosRequestConfig;\n\n  if (isTokenUnauthorized(error.response?.status) && routeNeedsTrustedUser(originalRequest, sdk)) {\n    const token = await sdk.sdkConfig.tokenStore!.getToken();\n    if (token?.scope !== 'trusted:user') {\n      console.error('Token is not trusted:user');\n      return Promise.reject(error);\n    }\n  }\n\n  if (isTokenExpired(error.response?.status) && !originalRequest._retry) {\n    const token = await sdk.sdkConfig.tokenStore!.getToken();\n    if (token && token.refresh_token) {\n      originalRequest._retry = true;\n      const response = await sdk.auth.token<'refresh-token'>({\n        client_id: sdk.sdkConfig.clientId,\n        grant_type: 'refresh_token',\n        refresh_token: token.refresh_token\n      });\n      originalRequest.headers.Authorization = prepareAuthorizationHeader(response.data);\n      sdk.sdkConfig.tokenStore!.setToken(response.data);\n      return sdk.axios(originalRequest);\n    }\n  }\n  return Promise.reject(error);\n}\n\nexport async function handleRequestSuccess(sdk: SharetribeSdk | IntegrationSdk, requestConfig: InternalAxiosRequestConfig): Promise<InternalAxiosRequestConfig> {\n  // Anonymous requests are allowed to use the public-read scope\n  const isAnonymousRequest = requestConfig?.data?.grant_type === 'client_credentials' && requestConfig.data.scope === 'public-read';\n  if (isAnonymousRequest) {\n    return requestConfig;\n  }\n\n  // when the request has no Authorization header, we need to add it\n  if (!requestConfig.headers.Authorization) {\n    const authToken = await sdk.sdkConfig.tokenStore!.getToken();\n    if (authToken) {\n      requestConfig.headers.Authorization = prepareAuthorizationHeader(authToken);\n    } else {\n      const response = await sdk.auth.token<'public-read'>({\n        client_id: sdk.sdkConfig.clientId,\n        grant_type: 'client_credentials',\n        scope: 'public-read'\n      });\n      requestConfig.headers.Authorization = prepareAuthorizationHeader(response.data);\n    }\n  }\n\n  // Convert data parameter to query Parameters\n  if (requestConfig.data) {\n    Object.keys(requestConfig.data).forEach(key => {\n      const isQueryParameter = QUERY_PARAMETERS.find(param => key === param || key.startsWith(param));\n      if (isQueryParameter) {\n        requestConfig.params = {\n          ...requestConfig.params,\n          [key]: Array.isArray(requestConfig.data[key]) ? requestConfig.data[key].join(',') : requestConfig.data[key]\n        };\n        delete requestConfig.data[key];\n      }\n    });\n\n    // Convert data types to data structure that can be send via HTTP\n    typeToData(requestConfig.data, sdk);\n  }\n  return requestConfig;\n}\n\n// Main setup function\nexport function prepareAxiosInstance(sdk: SharetribeSdk | IntegrationSdk) {\n  sdk.axios.interceptors.response.use(handleResponseSuccess(sdk), (error: AxiosError) => handleResponseFailure(sdk, error));\n  sdk.axios.interceptors.request.use((config: InternalAxiosRequestConfig) => handleRequestSuccess(sdk, config));\n  sdk.axios.defaults.paramsSerializer = parameterSerializer;\n}\n\nexport default prepareAxiosInstance;\n","/**\n * @fileoverview Provides the AssetsApi class for interacting with the Sharetribe Asset Delivery API.\n * This class includes methods to retrieve assets by alias or version.\n *\n * For more information, refer to the Asset Delivery API reference:\n * https://www.sharetribe.com/api-reference/asset-delivery-api.html\n */\n\nimport SharetribeSdk from '../../sdk';\nimport {AxiosInstance, AxiosResponse} from 'axios';\nimport {\n  AssetByAliasParameter,\n  AssetByVersionParameter,\n  AssetResponse,\n  AssetsByAliasParameter,\n  AssetsByVersionParameter,\n} from '../../types/assets';\n\n/**\n * Extracts the common path and asset names from a list of paths.\n *\n * @param {string[]} paths - The list of asset paths.\n * @returns {{commonPath: string, assets: string[]}} - An object containing the common path and an array of asset names.\n * @throws {Error} If the paths do not share a common prefix.\n */\nconst extractCommonPathAndAssets = (paths: string[]) => {\n  let commonPath: string = '';\n  const assets: string[] = [];\n  paths.forEach(path => {\n    const prefix = path.split('/')[0];\n    const asset = path.split('/')[1];\n    if (!commonPath) {\n      commonPath = prefix;\n    } else if (commonPath !== prefix) {\n      throw new Error('All paths should have the same prefix');\n    }\n    assets.push(asset);\n  })\n  return {commonPath, assets};\n}\n\n/**\n * Class representing the Assets API for interacting with the Sharetribe Asset Delivery API.\n */\nclass AssetsApi {\n  axios: AxiosInstance;\n  endpoint: string;\n  headers: Record<string, string>;\n\n  /**\n   * Creates an instance of AssetsApi.\n   *\n   * @param {SharetribeSdk} sdk - The Sharetribe SDK instance for configuration and request handling.\n   */\n  constructor(sdk: SharetribeSdk) {\n    const config = sdk.apisConfigs.api(sdk.sdkConfig);\n    this.endpoint = config.baseUrl + `/pub/${sdk.sdkConfig.clientId}`;\n    this.headers = config.headers;\n    this.axios = sdk.axios;\n  }\n\n  /**\n   * Retrieves a single asset by alias.\n   *\n   * @template P\n   * @param {P & AssetByAliasParameter} params - Parameters including alias and path for the asset.\n   * @returns {Promise<AssetResponse<'assetByAlias', P>>} - A promise resolving to the asset response.\n   * @throws {Error} If the path starts with a leading slash.\n   */\n  async assetByAlias<P extends AssetByAliasParameter>(params: P): Promise<AxiosResponse<AssetResponse<'assetByAlias', P>>> {\n    if (params.path.startsWith('/')) {\n      throw new Error('Path should not start with /');\n    }\n    return await this.axios.get<AssetResponse<'assetByAlias', P>>(this.endpoint + `/a/${params.alias}/${params.path}`, {\n      headers: this.headers\n    });\n  }\n\n  /**\n   * Retrieves multiple assets by alias.\n   *\n   * @template P\n   * @param {P & AssetsByAliasParameter} params - Parameters including alias and paths for the assets.\n   * @returns {Promise<AssetResponse<'assetsByAlias', P>>} - A promise resolving to the assets response.\n   * @throws {Error} If any path starts with a leading slash or if paths are empty.\n   */\n  async assetsByAlias<P extends AssetsByAliasParameter>(params: P): Promise<AxiosResponse<AssetResponse<'assetsByAlias', P>>> {\n    if (params.paths.some(path => path.startsWith('/'))) {\n      throw new Error('Path should not start with /');\n    }\n    const {commonPath, assets} = extractCommonPathAndAssets(params.paths);\n    if (!commonPath) {\n      throw new Error('Paths should not be empty');\n    }\n    return await this.axios.get<AssetResponse<'assetsByAlias', P>>(this.endpoint + `/a/${params.alias}/${commonPath}/`, {\n      headers: this.headers,\n      params: {\n        assets: assets\n      }\n    });\n  }\n\n  /**\n   * Retrieves a single asset by version.\n   *\n   * @template P\n   * @param {P & AssetByVersionParameter} params - Parameters including version and path for the asset.\n   * @returns {Promise<AssetResponse<'assetByVersion', P>>} - A promise resolving to the asset response.\n   * @throws {Error} If the path starts with a leading slash.\n   */\n  async assetByVersion<P extends AssetByVersionParameter>(params: P): Promise<AxiosResponse<AssetResponse<'assetByVersion', P>>> {\n    if (params.path.startsWith('/')) {\n      throw new Error('Path should not start with /');\n    }\n    return await this.axios.get<AssetResponse<'assetByVersion', P>>(this.endpoint + `/v/${params.version}/${params.path}`, {\n      headers: this.headers\n    });\n  }\n\n  /**\n   * Retrieves multiple assets by version.\n   *\n   * @template P\n   * @param {P & AssetsByVersionParameter} params - Parameters including version and paths for the assets.\n   * @returns {Promise<AssetResponse<'assetsByVersion', P>>} - A promise resolving to the assets response.\n   * @throws {Error} If any path starts with a leading slash.\n   */\n  async assetsByVersion<P extends AssetsByVersionParameter>(params: P): Promise<AxiosResponse<AssetResponse<'assetsByVersion', P>>> {\n    if (params.paths.some(path => path.startsWith('/'))) {\n      throw new Error('Path should not start with /');\n    }\n    const {commonPath, assets} = extractCommonPathAndAssets(params.paths);\n    return await this.axios.get<AssetResponse<'assetsByVersion', P>>(this.endpoint + `/v/${params.version}/${commonPath}/`, {\n      headers: this.headers,\n      params: {\n        paths: assets\n      }\n    });\n  }\n}\n\nexport default AssetsApi;","import { AuthToken, TokenStore } from '../../types/store';\n\n/**\n * `MemoryStore` is an in-memory implementation of the `TokenStore` interface.\n * It is suitable for short-lived or testing purposes, where tokens do not need to persist beyond the application's lifecycle.\n */\nclass MemoryStore implements TokenStore {\n  token: AuthToken | null = null; // Holds the token in memory\n\n  /**\n   * Retrieves the stored authentication token.\n   * @returns A promise resolving to the `AuthToken` or `null` if no token is stored.\n   */\n  async getToken(): Promise<AuthToken | null> {\n    return this.token;\n  }\n\n  /**\n   * Removes the stored authentication token from memory.\n   */\n  removeToken(): void {\n    this.token = null;\n  }\n\n  /**\n   * Stores the provided authentication token in memory.\n   * @param token - The authentication token to store.\n   */\n  setToken(token: AuthToken): void {\n    this.token = token;\n  }\n}\n\nexport default MemoryStore;\n","import MemoryStore from \"./stores/memory-store\";\n\n/**\n * Default SDK configuration object for the Sharetribe Flex API.\n */\nexport const DefaultSdkConfig = {\n  baseUrl: 'https://flex-api.sharetribe.com', // Base URL for the API\n  assetCdnBaseUrl: 'https://cdn.st-api.com', // Base URL for assets\n  version: 'v1', // API version\n  transitVerbose: false, // Toggle for verbose transit serialization\n  tokenStore: new MemoryStore(), // Default token store (in-memory)\n  typeHandlers: [] // Array to handle custom data types\n};\n","import {SdkConfig} from './types/config';\nimport {createApisConfigs} from './utils/apis';\nimport {ApiConfigs} from './types/apiConfigs';\nimport axios, {AxiosInstance, AxiosResponse} from 'axios';\nimport AuthenticationApi from \"./endpoints/auth\";\nimport MarketplaceApi from './endpoints/marketplace';\nimport prepareAxiosInstance from './utils/prepare-axios-instance';\nimport Listings from './endpoints/marketplace/Listings';\nimport AvailabilityExceptions from './endpoints/marketplace/AvailabilityExceptions';\nimport Bookings from './endpoints/marketplace/Bookings';\nimport CurrentUser from './endpoints/marketplace/CurrentUser';\nimport Images from './endpoints/marketplace/Images';\nimport Marketplace from './endpoints/marketplace/Marketplace';\nimport Messages from './endpoints/marketplace/Messages';\nimport OwnListings from './endpoints/marketplace/OwnListings';\nimport PasswordReset from './endpoints/marketplace/PasswordReset';\nimport ProcessTransitions from './endpoints/marketplace/ProcessTransitions';\nimport Reviews from './endpoints/marketplace/Reviews';\nimport Stock from './endpoints/marketplace/Stock';\nimport StockAdjustments from './endpoints/marketplace/StockAdjustments';\nimport StripeAccount from './endpoints/marketplace/StripeAccount';\nimport StripeAccountLinks from './endpoints/marketplace/StripeAccountLinks';\nimport StripeCustomer from './endpoints/marketplace/StripeCustomer';\nimport StripePersons from './endpoints/marketplace/StripePersons';\nimport StripeSetupIntents from './endpoints/marketplace/StripeSetupIntents';\nimport TimeSlots from './endpoints/marketplace/TimeSlots';\nimport Transactions from './endpoints/marketplace/Transactions';\nimport Users from './endpoints/marketplace/Users';\nimport {\n  AuthInfoResponse,\n  LoginParameter,\n  LoginWithIdpParameter,\n  RevokeResponse,\n  Scope,\n  TokenResponse\n} from './types/authentication';\nimport AssetsApi from './endpoints/assets';\nimport {DefaultSdkConfig} from \"./utils/config\";\n\nclass SharetribeSdk {\n  /**\n   * The SDK configuration object.\n   * @type {SdkConfig}\n   */\n  sdkConfig: SdkConfig;\n\n  /**\n   * The API configuration object.\n   * @type {ApiConfigs}\n   */\n  apisConfigs: ApiConfigs;\n\n  /**\n   * Axios instance for making HTTP requests.\n   * @type {AxiosInstance}\n   */\n  axios: AxiosInstance;\n\n  /**\n   * Endpoint for handling authentication.\n   * @type {AuthenticationApi}\n   */\n  auth: AuthenticationApi;\n\n  /**\n   * Main marketplace API instance.\n   * @type {MarketplaceApi}\n   */\n  api: MarketplaceApi;\n\n  /**\n   * Assets API instance for managing assets.\n   * @type {AssetsApi}\n   */\n  assetsApi: AssetsApi;\n\n  // API Endpoints\n\n  /**\n   * Endpoint for managing listings.\n   * @type {Listings}\n   */\n  listings: Listings;\n\n  /**\n   * Endpoint for managing availability exceptions.\n   * @type {AvailabilityExceptions}\n   */\n  availabilityExceptions: AvailabilityExceptions;\n\n  /**\n   * Endpoint for managing bookings.\n   * @type {Bookings}\n   * */\n  bookings: Bookings;\n\n  /**\n   * Endpoint for managing the current user.\n   *  @type {CurrentUser}\n   */\n  currentUser: CurrentUser;\n\n  /**\n   * Endpoint for handling images.\n   * @type {Images}\n   */\n  images: Images;\n\n  /**\n   * Endpoint for accessing marketplace details.\n   *  @type {Marketplace}\n   */\n  marketplace: Marketplace;\n\n  /**\n   * Endpoint for managing messages.\n   * @type {Messages}\n   */\n  messages: Messages;\n\n  /**\n   * Endpoint for managing own listings.\n   * @type {OwnListings} */\n  ownListings: OwnListings;\n\n  /**\n   * Endpoint for managing password resets.\n   * @type {PasswordReset} */\n  passwordReset: PasswordReset;\n\n  /**\n   * Endpoint for managing process transitions.\n   * @type {ProcessTransitions} */\n  processTransitions: ProcessTransitions;\n\n  /**\n   * Endpoint for managing reviews.\n   *  @type {Reviews} */\n  reviews: Reviews;\n\n  /**\n   * Endpoint for managing stock.\n   * @type {Stock} */\n  stock: Stock;\n\n  /**\n   * Endpoint for managing stock adjustments.\n   * @type {StockAdjustments} */\n  stockAdjustments: StockAdjustments;\n\n  /**\n   * Endpoint for managing stripe accounts.\n   * @type {StripeAccount} */\n  stripeAccount: StripeAccount;\n\n  /**\n   * Endpoint for managing stripe account links.\n   * @type {StripeAccountLinks} */\n  stripeAccountLinks: StripeAccountLinks;\n\n  /**\n   * Endpoint for managing stripe customers.\n   * @type {StripeCustomer} */\n  stripeCustomer: StripeCustomer;\n\n  /**\n   * Endpoint for managing stripe persons.\n   * @type {StripePersons} */\n  stripePersons: StripePersons;\n\n  /**\n   * Endpoint for managing stripe setup intents.\n   * @type {StripeSetupIntents} */\n  stripeSetupIntents: StripeSetupIntents;\n\n  /**\n   * Endpoint for managing timeslots.\n   * @type {TimeSlots} */\n  timeslots: TimeSlots;\n\n  /**\n   * Endpoint for managing transactions.\n   * @type {Transactions} */\n  transactions: Transactions;\n\n  /**\n   * Endpoint for managing users.\n   * @type {Users} */\n  users: Users;\n\n  // Asset Endpoints\n\n  /** @type {AssetsApi['assetByAlias']} */\n  assetByAlias: AssetsApi['assetByAlias'];\n\n  /** @type {AssetsApi['assetsByAlias']} */\n  assetsByAlias: AssetsApi['assetsByAlias'];\n\n  /** @type {AssetsApi['assetByVersion']} */\n  assetByVersion: AssetsApi['assetByVersion'];\n\n  /** @type {AssetsApi['assetsByVersion']} */\n  assetsByVersion: AssetsApi['assetsByVersion'];\n\n  /**\n   * Creates an instance of the Sharetribe SDK.\n   *\n   * @constructor\n   * @param {SdkConfig} config - The configuration object for the SDK.\n   */\n  constructor(config: SdkConfig) {\n    this.sdkConfig = {\n      ...DefaultSdkConfig,\n      ...config,\n    };\n\n    this.apisConfigs = createApisConfigs();\n    this.axios = axios.create({\n      baseURL: `${this.sdkConfig.baseUrl}/${this.sdkConfig.version}/`,\n    });\n    prepareAxiosInstance(this);\n\n    this.auth = new AuthenticationApi(this);\n    this.api = new MarketplaceApi(this);\n    this.assetsApi = new AssetsApi(this);\n\n    // Api Endpoints\n    this.availabilityExceptions = this.api.availabilityExceptions;\n    this.bookings = this.api.bookings;\n    this.currentUser = this.api.currentUser;\n    this.images = this.api.images;\n    this.listings = this.api.listings;\n    this.marketplace = this.api.marketplace;\n    this.messages = this.api.messages;\n    this.ownListings = this.api.ownListings;\n    this.passwordReset = this.api.passwordReset;\n    this.processTransitions = this.api.processTransitions;\n    this.reviews = this.api.reviews;\n    this.stock = this.api.stock;\n    this.stockAdjustments = this.api.stockAdjustments;\n    this.stripeAccount = this.api.stripeAccount;\n    this.stripeAccountLinks = this.api.stripeAccountLinks;\n    this.stripeCustomer = this.api.stripeCustomer;\n    this.stripePersons = this.api.stripePersons;\n    this.stripeSetupIntents = this.api.stripeSetupIntents;\n    this.timeslots = this.api.timeslots;\n    this.transactions = this.api.transactions;\n    this.users = this.api.users;\n\n    // Asset Endpoints\n    this.assetByAlias = this.assetsApi.assetByAlias;\n    this.assetsByAlias = this.assetsApi.assetsByAlias;\n    this.assetByVersion = this.assetsApi.assetByVersion;\n    this.assetsByVersion = this.assetsApi.assetsByVersion;\n  }\n\n  /**\n   * Logs in a user using their credentials.\n   *\n   * @async\n   * @param {LoginParameter} params - The login parameters.\n   * @returns {Promise<AuthToken>} - The authentication token.\n   */\n  async login(params: LoginParameter): Promise<AxiosResponse<TokenResponse<\"user\">>> {\n    return this.auth.token<'user'>({\n      client_id: this.sdkConfig.clientId,\n      grant_type: 'password',\n      scope: 'user',\n      ...params,\n    });\n  }\n\n  /**\n   * Logs in a user using an identity provider (IDP).\n   *\n   * @async\n   * @param {LoginWithIdpParameter} params - The IDP login parameters.\n   * @returns {Promise<AuthToken>} - The authentication token.\n   */\n  async loginWithIdp(params: LoginWithIdpParameter): Promise<AxiosResponse<TokenResponse<\"user\">>> {\n    if (this.sdkConfig.clientSecret === undefined) {\n      throw new Error('clientSecret is required to login with idp');\n    }\n    return this.auth.authWithIdp({\n      client_id: this.sdkConfig.clientId,\n      client_secret: this.sdkConfig.clientSecret!,\n      ...params,\n    });\n  }\n\n  /**\n   * Logs out the current user.\n   *\n   * @async\n   * @returns {Promise<void>} - Resolves when the user is logged out.\n   */\n  async logout(): Promise<AxiosResponse<RevokeResponse>> {\n    const {access_token} = (await this.sdkConfig.tokenStore!.getToken())!;\n    return this.auth.revoke(access_token);\n  }\n\n  /**\n   * Exchanges the current token for a trusted user token.\n   *\n   * @async\n   * @returns {Promise<AuthToken>} - The exchanged token.\n   */\n  async exchangeToken(): Promise<AxiosResponse<TokenResponse<\"trusted:user\">>> {\n    const {access_token} = (await this.sdkConfig.tokenStore!.getToken())!;\n    if (this.sdkConfig.clientSecret === undefined) {\n      throw new Error('clientSecret is required to exchange token');\n    }\n    return this.auth.token<'trusted:user'>({\n      client_id: this.sdkConfig.clientId,\n      client_secret: this.sdkConfig.clientSecret!,\n      grant_type: 'token_exchange',\n      scope: 'trusted:user',\n      subject_token: access_token,\n    });\n  }\n\n  /**\n   * Retrieves authentication info for the current user.\n   *\n   * @async\n   * @returns {Promise<AuthInfoResponse>} - The authentication info.\n   */\n  async authInfo(): Promise<AuthInfoResponse> {\n    const storedToken = await this.sdkConfig.tokenStore!.getToken();\n    if (storedToken && storedToken.scope) {\n      const tokenScope = storedToken.scope;\n      const scopes = tokenScope.split(' ') as Scope[];\n      const isAnonymous = tokenScope === 'public-read';\n\n      const grantType = isAnonymous ? 'client_credentials' : 'refresh_token';\n\n      return {scopes, isAnonymous, grantType};\n    }\n\n    return {};\n  }\n}\n\nexport default SharetribeSdk;","/**\n * @fileoverview Provides the AvailabilityExceptions class for managing availability exceptions in the Sharetribe Integration API.\n * This class allows querying, creating, and deleting availability exceptions for resources in a Sharetribe marketplace.\n *\n * For more details, refer to the Integration API documentation:\n * https://www.sharetribe.com/api-reference/integration.html#availability-exceptions\n */\n\nimport {AxiosInstance, AxiosResponse} from 'axios';\nimport IntegrationApi from './index';\nimport {\n  AvailabilityExceptionsCreateParameter,\n  AvailabilityExceptionsDeleteParameter,\n  AvailabilityExceptionsQueryParameter,\n  AvailabilityExceptionsResponse\n} from '../../types/marketplace/availabilityExceptions';\nimport { ExtraParameter } from '../../types/sharetribe';\n\n/**\n * Class representing the Availability Exceptions API.\n *\n * Availability exceptions are used to override default availability rules for specific time ranges.\n * This class provides methods to query, create, and delete such exceptions.\n */\nclass AvailabilityExceptions {\n  private readonly endpoint: string;\n  private readonly axios: AxiosInstance;\n  private readonly headers: Record<string, string>;\n  public readonly authRequired = true;\n\n  /**\n   * Creates an instance of the AvailabilityExceptions class.\n   *\n   * @param {MarketplaceApi} api - The Marketplace API instance providing configuration and request handling.\n   */\n  constructor(api: IntegrationApi) {\n    this.endpoint = api.endpoint + '/availability_exceptions';\n    this.axios = api.axios;\n    this.headers = api.headers;\n  }\n\n  /**\n   * Queries availability exceptions for a resource.\n   *\n   * @template P\n   * @param {P & AvailabilityExceptionsQueryParameter} params - Query parameters to filter availability exceptions.\n   * @returns {Promise<AvailabilityExceptionsResponse<'query', P>>} - A promise resolving to the query response.\n   *\n   * @example\n   * const response = await integrationSdk.availabilityExceptions.query({\n   *   listingId: 'listing-id',\n   *   start: '2024-12-01T00:00:00Z',\n   *   end: '2024-12-31T23:59:59Z'\n   * });\n   *\n   * // Access the list of exceptions\n   * const exceptions = response.data;\n   */\n  async query<P extends AvailabilityExceptionsQueryParameter>(params: P): Promise<AxiosResponse<AvailabilityExceptionsResponse<'query', P>>> {\n    return this.axios.get<AvailabilityExceptionsResponse<'query', P>>(`${this.endpoint}/query`, {\n      ...this.headers,\n      params\n    })\n  }\n\n  /**\n   * Creates a new availability exception for a resource.\n   *\n   * @template P\n   * @template EP\n   * @param {P & AvailabilityExceptionsCreateParameter} params - Parameters to define the availability exception.\n   * @param {EP | void} [extraParams] - Optional additional parameters.\n   * @returns {Promise<AvailabilityExceptionsResponse<'create', P, EP>>} - A promise resolving to the create response.\n   *\n   * @example\n   * const response = await integrationSdk.availabilityExceptions.create({\n   *   listingId: 'listing-id',\n   *   start: '2024-12-10T10:00:00Z',\n   *   end: '2024-12-10T12:00:00Z',\n   *   seats: 0\n   * });\n   *\n   * // Access the created exception\n   * const createdException = response.data;\n   */\n  async create<P extends AvailabilityExceptionsCreateParameter, EP extends ExtraParameter>(params: P, extraParams: EP | void): Promise<AxiosResponse<AvailabilityExceptionsResponse<'create', P, EP>>> {\n    return this.axios.post<AvailabilityExceptionsResponse<'create', P, EP>>(`${this.endpoint}/create`, {...params, ...extraParams}, this.headers);\n  }\n\n  /**\n   * Deletes an availability exception for a resource.\n   *\n   * @template P\n   * @param {P & AvailabilityExceptionsDeleteParameter} params - Parameters to specify the exception to delete.\n   * @returns {Promise<AvailabilityExceptionsResponse<'delete', P>>} - A promise resolving to the delete response.\n   *\n   * @example\n   * const response = await integrationSdk.availabilityExceptions.delete({\n   *   id: 'exception-id'\n   * });\n   *\n   * // Check the deletion result\n   * const result = response.data;\n   */\n  async delete<P extends AvailabilityExceptionsDeleteParameter>(params: P): Promise<AxiosResponse<AvailabilityExceptionsResponse<'delete', P>>> {\n    return this.axios.post<AvailabilityExceptionsResponse<'delete', P>>(`${this.endpoint}/delete`, params, this.headers);\n  }\n}\n\nexport default AvailabilityExceptions;\n","/**\n * @fileoverview Provides the Events class for querying event data in the Sharetribe Integration API.\n * This class allows querying events related to bookings or other entities in a Sharetribe marketplace.\n *\n * For more details, refer to the Integration API documentation:\n * https://www.sharetribe.com/api-reference/integration.html#events\n */\n\nimport {AxiosInstance, AxiosResponse} from 'axios';\nimport IntegrationApi from './index';\nimport {EventQueryParameter, EventsResponse} from '../../types/integration/events';\n\n/**\n * Class representing the Events API.\n *\n * The Events API provides access to event data, such as booking events, allowing integration with external systems.\n */\nclass Events {\n  private readonly endpoint: string;\n  private readonly axios: AxiosInstance;\n  private readonly headers: Record<string, string>;\n\n  /**\n   * Creates an instance of the Events class.\n   *\n   * @param {MarketplaceApi} api - The Marketplace API instance providing configuration and request handling.\n   */\n  constructor(api: IntegrationApi) {\n    this.endpoint = api.endpoint + '/bookings';\n    this.axios = api.axios;\n    this.headers = api.headers;\n  }\n\n  /**\n   * Queries event data based on the specified parameters.\n   *\n   * @template P\n   * @param {P & EventQueryParameter} params - Query parameters to filter events.\n   * @returns {Promise<EventsResponse<'query'>>} - A promise resolving to the event query response.\n   *\n   * @example\n   * const response = await integrationSdk.events.query({\n   *  startAfterSequenceId: 'event-sequence-id',\n   *  createdAtStart: '2021-01-01T00:00:00Z',\n   *  resourceId: 'resource-id',\n   *  relatedResourceId: 'related-resource-id',\n   *  eventTypes: ['eventType1', 'eventType2'],\n   * });\n   *\n   * // Access the list of events\n   * const eventsList = response.data;\n   */\n  async query<P extends EventQueryParameter>(params: P): Promise<AxiosResponse<EventsResponse<'query'>>> {\n    return this.axios.get<EventsResponse<'query'>>(`${this.endpoint}/query`, {\n      ...this.headers,\n      params,\n    });\n  }\n}\n\nexport default Events;\n","/**\n * @fileoverview Provides the Images class for handling image uploads in the Sharetribe Integration API.\n * This class allows uploading images to be used as resources in a Sharetribe marketplace.\n *\n * For more details, refer to the Integration API documentation:\n * https://www.sharetribe.com/api-reference/integration.html#images\n */\n\nimport {AxiosInstance, AxiosResponse} from 'axios';\nimport IntegrationApi from './index';\nimport { ImagesResponse, ImagesUploadParameter } from '../../types/marketplace/images';\nimport { ExtraParameter } from '../../types/sharetribe';\n\n/**\n * Class representing the Images API.\n *\n * The Images API allows uploading images to the marketplace for use in listings or other resources.\n */\nclass Images {\n  private readonly endpoint: string;\n  private readonly axios: AxiosInstance;\n  private readonly headers: Record<string, string>;\n  public readonly authRequired = true;\n\n  /**\n   * Creates an instance of the Images class.\n   *\n   * @param {MarketplaceApi} api - The Marketplace API instance providing configuration and request handling.\n   */\n  constructor(api: IntegrationApi) {\n    this.endpoint = api.endpoint + '/images';\n    this.axios = api.axios;\n    this.headers = api.headers;\n  }\n\n  /**\n   * Uploads an image to the marketplace.\n   *\n   * @template P\n   * @template EP\n   * @param {P & ImagesUploadParameter} params - The image upload parameters, including image data and related metadata.\n   * @param {EP & ExtraParameter} extraParams - Optional additional parameters for the upload request.\n   * @returns {Promise<ImagesResponse<'upload', EP>>} - A promise resolving to the upload response.\n   *\n   * @example\n   * const response = await integrationSdk.images.upload({\n   *   image: fileData,\n   * });\n   *\n   * // Access the uploaded image details\n   * const imageDetails = response.data;\n   */\n  async upload<P extends ImagesUploadParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams: EP\n  ): Promise<AxiosResponse<ImagesResponse<'upload', EP>>> {\n    return this.axios.post<ImagesResponse<'upload', EP>>(\n      `${this.endpoint}/upload`,\n      { ...params, ...extraParams },\n      { ...this.headers }\n    );\n  }\n}\n\nexport default Images;\n","/**\n * @fileoverview Provides the Listings class for managing listings in the Sharetribe Integration API.\n * This class allows creating, updating, querying, and performing other operations on marketplace listings.\n *\n * For more details, refer to the Integration API documentation:\n * https://www.sharetribe.com/api-reference/integration.html#listings\n */\n\nimport {AxiosInstance, AxiosResponse} from 'axios';\nimport IntegrationApi from './index';\nimport {\n  ListingsApproveParameter,\n  ListingsCloseParameter,\n  ListingsCreateParameter,\n  ListingsOpenParameter,\n  ListingsQueryParameter,\n  ListingsResponse,\n  ListingsShowParameter,\n  ListingsUpdateParameter\n} from '../../types/marketplace/listings';\nimport { ExtraParameter } from '../../types/sharetribe';\n\n/**\n * Class representing the Listings API.\n *\n * The Listings API provides methods to manage marketplace listings, such as creating, updating, querying, and approving listings.\n */\nclass Listings {\n  private readonly endpoint: string;\n  private readonly axios: AxiosInstance;\n  private readonly headers: Record<string, string>;\n\n  /**\n   * Creates an instance of the Listings class.\n   *\n   * @param {IntegrationApi} api - The Marketplace API instance providing configuration and request handling.\n   */\n  constructor(api: IntegrationApi) {\n    this.endpoint = api.endpoint + '/listings';\n    this.axios = api.axios;\n    this.headers = api.headers;\n  }\n\n  /**\n   * Retrieves details of a specific listing.\n   *\n   * @template P\n   * @param {P & ListingsShowParameter} params - The parameters to identify the listing.\n   * @returns {Promise<ListingsResponse<'show', P>>} - A promise resolving to the listing details.\n   *\n   * @example\n   * const response = await integrationSdk.listings.show({\n   *   id: 'listing-id'\n   * });\n   *\n   * const listing = response.data;\n   */\n  async show<P extends ListingsShowParameter>(params: P): Promise<AxiosResponse<ListingsResponse<'show', P>>> {\n    return this.axios.get<ListingsResponse<'show', P>>(`${this.endpoint}/show`, {\n      ...this.headers,\n      params,\n    });\n  }\n\n  /**\n   * Queries listings based on specified filters.\n   *\n   * @template P\n   * @param {P & ListingsQueryParameter} params - Query parameters to filter listings.\n   * @returns {Promise<ListingsResponse<'query', P>>} - A promise resolving to the query results.\n   *\n   * @example\n   * const response = await integrationSdk.listings.query({\n   *   ids: ['listing-id-1', 'listing-id-2'],\n   *   per_page: 10,\n   *   page: 1\n   * });\n   *\n   * const listings = response.data;\n   */\n  async query<P extends ListingsQueryParameter>(params: P): Promise<AxiosResponse<ListingsResponse<'query', P>>> {\n    return this.axios.get<ListingsResponse<'query', P>>(`${this.endpoint}/query`, {\n      ...this.headers,\n      params,\n    });\n  }\n\n  /**\n   * Creates a new listing.\n   *\n   * @template P\n   * @template EP\n   * @param {P & ListingsCreateParameter} params - Parameters for the new listing.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<ListingsResponse<'create', P, EP>>} - A promise resolving to the created listing.\n   *\n   * @example\n   * const response = await integrationSdk.listings.create({\n   *   title: 'New Listing',\n   *   description: 'Description of the listing',\n   *   authorId: 'user-id',\n   *   state: 'published'\n   * });\n   *\n   * const newListing = response.data;\n   */\n  async create<P extends ListingsCreateParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams?: EP\n  ): Promise<AxiosResponse<ListingsResponse<'create', P, EP>>> {\n    return this.axios.post<ListingsResponse<'create', P, EP>>(`${this.endpoint}/create`, { ...params, ...extraParams }, {});\n  }\n\n  /**\n   * Updates an existing listing.\n   *\n   * @template P\n   * @template EP\n   * @param {P & ListingsUpdateParameter} params - Parameters for the listing update.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<ListingsResponse<'update', P, EP>>} - A promise resolving to the updated listing.\n   *\n   * @example\n   * const response = await integrationSdk.listings.update({\n   *   id: 'listing-id',\n   *   title: 'Updated Title'\n   * });\n   *\n   * const updatedListing = response.data;\n   */\n  async update<P extends ListingsUpdateParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams?: EP\n  ): Promise<AxiosResponse<ListingsResponse<'update', P, EP>>> {\n    return this.axios.post<ListingsResponse<'update', P, EP>>(`${this.endpoint}/update`, { ...params, ...extraParams }, {});\n  }\n\n  /**\n   * Closes a listing.\n   *\n   * @template P\n   * @template EP\n   * @param {P & ListingsCloseParameter} params - Parameters to identify the listing to close.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<ListingsResponse<'close', P, EP>>} - A promise resolving to the closed listing.\n   *\n   * @example\n   * const response = await integrationSdk.listings.close({\n   *   id: 'listing-id'\n   * });\n   *\n   * const closedListing = response.data;\n   */\n  async close<P extends ListingsCloseParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams?: EP\n  ): Promise<AxiosResponse<ListingsResponse<'close', P, EP>>> {\n    return this.axios.post<ListingsResponse<'close', P, EP>>(`${this.endpoint}/close`, { ...params, ...extraParams }, {});\n  }\n\n  /**\n   * Opens a listing.\n   *\n   * @template P\n   * @template EP\n   * @param {P & ListingsOpenParameter} params - Parameters to identify the listing to open.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<ListingsResponse<'open', P, EP>>} - A promise resolving to the opened listing.\n   *\n   * @example\n   * const response = await integrationSdk.listings.open({\n   *   id: 'listing-id'\n   * });\n   *\n   * const openedListing = response.data;\n   */\n  async open<P extends ListingsOpenParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams?: EP\n  ): Promise<AxiosResponse<ListingsResponse<'open', P, EP>>> {\n    return this.axios.post<ListingsResponse<'open', P, EP>>(`${this.endpoint}/open`, { ...params, ...extraParams }, {});\n  }\n\n  /**\n   * Approves a listing.\n   *\n   * @template P\n   * @template EP\n   * @param {P & ListingsApproveParameter} params - Parameters to identify the listing to approve.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<ListingsResponse<'approve', P, EP>>} - A promise resolving to the approved listing.\n   *\n   * @example\n   * const response = await integrationSdk.listings.approve({\n   *   id: 'listing-id'\n   * });\n   *\n   * const approvedListing = response.data;\n   */\n  async approve<P extends ListingsApproveParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams?: EP\n  ): Promise<AxiosResponse<ListingsResponse<'approve', P, EP>>> {\n    return this.axios.post<ListingsResponse<'approve', P, EP>>(`${this.endpoint}/approve`, { ...params, ...extraParams }, {});\n  }\n}\n\nexport default Listings;\n","/**\n * @fileoverview Provides the Marketplace class for interacting with the Sharetribe Integration API.\n * This class allows fetching details about the marketplace configuration.\n *\n * For more details, refer to the Integration API documentation:\n * https://www.sharetribe.com/api-reference/integration.html#marketplace\n */\n\nimport { AxiosInstance, AxiosResponse } from 'axios';\nimport IntegrationApi from './index';\nimport { MarketplaceResponse } from '../../types/marketplace/marketplace';\n\n/**\n * Class representing the Marketplace API.\n *\n * The Marketplace API provides methods to retrieve marketplace configuration details.\n */\nclass Marketplace {\n  private readonly endpoint: string;\n  private readonly axios: AxiosInstance;\n  private readonly headers: Record<string, string>;\n\n  /**\n   * Creates an instance of the Marketplace class.\n   *\n   * @param {MarketplaceApi} api - The Marketplace API instance providing configuration and request handling.\n   */\n  constructor(api: IntegrationApi) {\n    this.endpoint = api.endpoint + '/marketplace';\n    this.axios = api.axios;\n    this.headers = api.headers;\n  }\n\n  /**\n   * Retrieves details about the marketplace configuration.\n   *\n   * @returns {Promise<AxiosResponse<MarketplaceResponse<'show'>>>} - A promise resolving to the marketplace details.\n   *\n   * @example\n   * const response = await integrationSdk.marketplace.show();\n   *\n   * const marketplaceDetails = response.data;\n   */\n  async show(): Promise<AxiosResponse<MarketplaceResponse<'show'>>> {\n    return this.axios.get<MarketplaceResponse<'show'>>(`${this.endpoint}/show`, {\n      ...this.headers,\n    });\n  }\n}\n\nexport default Marketplace;\n","/**\n * @fileoverview Provides the Stock class for managing stock levels in the Sharetribe Integration API.\n * This class allows performing operations on stock, such as compare-and-set updates.\n *\n * For more details, refer to the Integration API documentation:\n * https://www.sharetribe.com/api-reference/integration.html#stock\n */\n\nimport { AxiosInstance, AxiosResponse } from 'axios';\nimport IntegrationApi from './index';\nimport { StockCompareAndSetParameter, StockResponse } from '../../types/marketplace/stock';\nimport { ExtraParameter } from '../../types/sharetribe';\n\n/**\n * Class representing the Stock API.\n *\n * The Stock API provides methods to manage stock levels for marketplace resources.\n */\nclass Stock {\n  private readonly endpoint: string;\n  private readonly axios: AxiosInstance;\n  public readonly authRequired = true;\n\n  /**\n   * Creates an instance of the Stock class.\n   *\n   * @param {MarketplaceApi} api - The Marketplace API instance providing configuration and request handling.\n   */\n  constructor(api: IntegrationApi) {\n    this.endpoint = api.endpoint + '/stock';\n    this.axios = api.axios;\n  }\n\n  /**\n   * Updates stock levels using a compare-and-set operation.\n   *\n   * @template P\n   * @template EP\n   * @param {P & StockCompareAndSetParameter} params - Parameters specifying the stock to compare and set.\n   * @param {EP & ExtraParameter} extraParams - Optional additional parameters for the request.\n   * @returns {Promise<AxiosResponse<StockResponse<'compareAndSet', EP>>>} - A promise resolving to the stock update response.\n   *\n   * @example\n   * const response = await integrationSdk.stock.compareAndSet({\n   *   listingId: 'listing-id',\n   *   oldTotal: 5,\n   *   newTotal: 10,\n   * });\n   *\n   * const updatedStock = response.data;\n   */\n  async compareAndSet<P extends StockCompareAndSetParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams: EP\n  ): Promise<AxiosResponse<StockResponse<'compareAndSet', EP>>> {\n    return this.axios.post<StockResponse<'compareAndSet', EP>>(\n      `${this.endpoint}/compare_and_set`,\n      { ...params, ...extraParams }\n    );\n  }\n}\n\nexport default Stock;\n","/**\n * @fileoverview Provides the StockAdjustments class for managing stock adjustments in the Sharetribe Integration API.\n * This class allows querying and creating stock adjustment records.\n *\n * For more details, refer to the Integration API documentation:\n * https://www.sharetribe.com/api-reference/integration.html#stock-adjustments\n */\n\nimport { AxiosInstance, AxiosResponse } from 'axios';\nimport IntegrationApi from './index';\nimport {\n  StockAdjustmentsCreateParameter,\n  StockAdjustmentsQueryParameter,\n  StockAdjustmentsResponse,\n} from '../../types/marketplace/stockAdjustment';\nimport { ExtraParameter } from '../../types/sharetribe';\n\n/**\n * Class representing the Stock Adjustments API.\n *\n * The Stock Adjustments API provides methods to query and create stock adjustments for marketplace resources.\n */\nclass StockAdjustments {\n  private readonly endpoint: string;\n  private readonly axios: AxiosInstance;\n  private readonly headers: Record<string, string>;\n  public readonly authRequired = true;\n\n  /**\n   * Creates an instance of the StockAdjustments class.\n   *\n   * @param {IntegrationApi} api - The Integration API instance providing configuration and request handling.\n   */\n  constructor(api: IntegrationApi) {\n    this.endpoint = api.endpoint + '/stock_adjustments';\n    this.axios = api.axios;\n    this.headers = api.headers;\n  }\n\n  /**\n   * Queries stock adjustment records based on specified filters.\n   *\n   * @template P\n   * @param {P & StockAdjustmentsQueryParameter} params - Query parameters to filter stock adjustment records.\n   * @returns {Promise<AxiosResponse<StockAdjustmentsResponse<'query', P>>>} - A promise resolving to the query results.\n   *\n   * @example\n   * const response = await integrationSdk.stockAdjustments.query({\n   *   listingId: 'resource-id',\n   *   start: '2024-12-01T00:00:00Z',\n   *   end: '2024-12-31T23:59:59Z',\n   * });\n   *\n   * const adjustments = response.data;\n   */\n  async query<P extends StockAdjustmentsQueryParameter>(\n    params: P\n  ): Promise<AxiosResponse<StockAdjustmentsResponse<'query', P>>> {\n    return this.axios.get<StockAdjustmentsResponse<'query', P>>(`${this.endpoint}/query`, {\n      ...this.headers,\n      params,\n    });\n  }\n\n  /**\n   * Creates a new stock adjustment record.\n   *\n   * @template P\n   * @template EP\n   * @param {P & StockAdjustmentsCreateParameter} params - Parameters for the new stock adjustment.\n   * @param {EP | undefined} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<StockAdjustmentsResponse<'create', P, EP>>>} - A promise resolving to the created stock adjustment record.\n   *\n   * @example\n   * const response = await integrationSdk.stockAdjustments.create({\n   *   listingId: 'listing-id',\n   *   quantity: 10,\n   * });\n   *\n   * const newAdjustment = response.data;\n   */\n  async create<P extends StockAdjustmentsCreateParameter, EP extends ExtraParameter | undefined>(\n    params: P,\n    extraParams: EP\n  ): Promise<AxiosResponse<StockAdjustmentsResponse<'create', P, EP>>> {\n    return this.axios.post<StockAdjustmentsResponse<'create', P, EP>>(\n      `${this.endpoint}/create`,\n      { ...params, ...extraParams },\n      this.headers\n    );\n  }\n}\n\nexport default StockAdjustments;\n","/**\n * @fileoverview Provides the StockReservation class for managing stock reservations in the Sharetribe Integration API.\n * This class allows retrieving details about stock reservations.\n *\n * For more details, refer to the Integration API documentation:\n * https://www.sharetribe.com/api-reference/integration.html#stock-reservations\n */\n\nimport { AxiosInstance, AxiosResponse } from 'axios';\nimport IntegrationApi from './index';\nimport { StockReservationShowParameter, StockReservationsResponse } from '../../types/marketplace/stockReservations';\n\n/**\n * Class representing the Stock Reservations API.\n *\n * The Stock Reservations API provides methods to manage stock reservations for marketplace resources.\n */\nclass StockReservation {\n  private readonly endpoint: string;\n  private readonly axios: AxiosInstance;\n  private readonly headers: Record<string, string>;\n\n  /**\n   * Creates an instance of the StockReservation class.\n   *\n   * @param {IntegrationApi} api - The Integration API instance providing configuration and request handling.\n   */\n  constructor(api: IntegrationApi) {\n    this.endpoint = api.endpoint + '/stock_reservations';\n    this.axios = api.axios;\n    this.headers = api.headers;\n  }\n\n  /**\n   * Retrieves details about a specific stock reservation.\n   *\n   * @template P\n   * @param {P & StockReservationShowParameter} params - The parameters to identify the stock reservation.\n   * @returns {Promise<AxiosResponse<StockReservationsResponse<'show', P>>>} - A promise resolving to the stock reservation details.\n   *\n   * @example\n   * const response = await integrationSdk.stockReservations.show({\n   *   id: 'reservation-id',\n   * });\n   *\n   * const reservationDetails = response.data;\n   */\n  async show<P extends StockReservationShowParameter>(\n    params: P\n  ): Promise<AxiosResponse<StockReservationsResponse<'show', P>>> {\n    return this.axios.get<StockReservationsResponse<'show', P>>(`${this.endpoint}/show`, {\n      ...this.headers,\n      params,\n    });\n  }\n}\n\nexport default StockReservation;\n","/**\n * @fileoverview Provides the Transactions class for managing transactions in the Sharetribe Integration API.\n * This class allows querying, transitioning, and updating metadata for transactions.\n *\n * For more details, refer to the Integration API documentation:\n * https://www.sharetribe.com/api-reference/integration.html#transactions\n */\n\nimport {AxiosInstance, AxiosResponse} from 'axios';\nimport IntegrationApi from './index';\nimport {\n  TransactionsQueryParameter,\n  TransactionsResponse,\n  TransactionsShowParameter,\n  TransactionsTransitionParameter,\n  TransactionsTransitionSpeculativeParameter,\n  TransactionsUpdateMetadataParameter,\n} from '../../types/marketplace/transaction';\nimport {ExtraParameter} from '../../types/sharetribe';\n\n/**\n * Class representing the Transactions API.\n *\n * The Transactions API provides methods to query, transition, and manage metadata for marketplace transactions.\n */\nclass Transactions {\n  private readonly endpoint: string;\n  private readonly axios: AxiosInstance;\n  private readonly headers: Record<string, string>;\n  public readonly authRequired = true;\n\n  /**\n   * Creates an instance of the Transactions class.\n   *\n   * @param {IntegrationApi} api - The Integration API instance providing configuration and request handling.\n   */\n  constructor(api: IntegrationApi) {\n    this.endpoint = api.endpoint + '/transactions';\n    this.axios = api.axios;\n    this.headers = api.headers;\n  }\n\n  /**\n   * Retrieves details about a specific transaction.\n   *\n   * @template P\n   * @param {P & TransactionsShowParameter} params - The parameters to identify the transaction.\n   * @returns {Promise<AxiosResponse<TransactionsResponse<'show', P>>>} - A promise resolving to the transaction details.\n   *\n   * @example\n   * const response = await integrationSdk.transactions.show({\n   *   id: 'transaction-id',\n   * });\n   *\n   * const transactionDetails = response.data;\n   */\n  async show<P extends TransactionsShowParameter>(\n    params: P\n  ): Promise<AxiosResponse<TransactionsResponse<'show', P>>> {\n    return this.axios.get<TransactionsResponse<'show', P>>(`${this.endpoint}/show`, {\n      ...this.headers,\n      params,\n    });\n  }\n\n  /**\n   * Queries transactions based on specified filters.\n   *\n   * @template P\n   * @param {P & TransactionsQueryParameter<true>} params - Query parameters to filter transactions.\n   * @returns {Promise<AxiosResponse<TransactionsResponse<'query', P>>>} - A promise resolving to the query results.\n   *\n   * @example\n   * const response = await integrationSdk.transactions.query({\n   *  createdAtStart: '2021-01-01T00:00:00Z',\n   *  createdAtEnd: '2021-01-31T23:59:59Z',\n   *  userId: 'user-id',\n   *  customerId: 'customer-id',\n   *  providerId: 'provider-id',\n   *  listingId: 'listing-id',\n   * });\n   *\n   * const transactions = response.data;\n   */\n  async query<P extends TransactionsQueryParameter<true>>(\n    params: P\n  ): Promise<AxiosResponse<TransactionsResponse<'query', P>>> {\n    return this.axios.get<TransactionsResponse<'query', P>>(`${this.endpoint}/query`, {\n      ...this.headers,\n      params,\n    });\n  }\n\n  /**\n   * Transitions a transaction to a new state.\n   *\n   * @template P\n   * @template EP\n   * @param {P & TransactionsTransitionParameter} params - Parameters specifying the transaction and the transition.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<TransactionsResponse<'transition', P, EP>>>} - A promise resolving to the transitioned transaction.\n   *\n   * @example\n   * const response = await integrationSdk.transactions.transition({\n   *   id: 'transaction-id',\n   *   transition: 'accept',\n   *   params: { key: 'value' },\n   * });\n   *\n   * const updatedTransaction = response.data;\n   */\n  async transition<P extends TransactionsTransitionParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams: EP | void\n  ): Promise<AxiosResponse<TransactionsResponse<'transition', P, EP>>> {\n    return this.axios.post<TransactionsResponse<'transition', P, EP>>(\n      `${this.endpoint}/transition`,\n      {...params, ...extraParams},\n      this.headers\n    );\n  }\n\n  /**\n   * Transitions a transaction speculatively to a new state without persisting the transition.\n   *\n   * @template P\n   * @template EP\n   * @param {P & TransactionsTransitionSpeculativeParameter} params - Parameters specifying the speculative transition.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<TransactionsResponse<'transitionSpeculative', P, EP>>>} - A promise resolving to the speculative transition result.\n   *\n   * @example\n   * const response = await integrationSdk.transactions.transitionSpeculative({\n   *   id: 'transaction-id',\n   *   transition: 'accept',\n   *   params: { key: 'value' },\n   * });\n   *\n   * const speculativeResult = response.data;\n   */\n  async transitionSpeculative<P extends TransactionsTransitionSpeculativeParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams: EP | void\n  ): Promise<AxiosResponse<TransactionsResponse<'transitionSpeculative', P, EP>>> {\n    return this.axios.post<TransactionsResponse<'transitionSpeculative', P, EP>>(\n      `${this.endpoint}/transition_speculative`,\n      {...params, ...extraParams},\n      this.headers\n    );\n  }\n\n  /**\n   * Updates metadata for a transaction.\n   *\n   * @template P\n   * @template EP\n   * @param {P & TransactionsUpdateMetadataParameter} params - Parameters specifying the transaction metadata to update.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<TransactionsResponse<'updateMetadata', P, EP>>>} - A promise resolving to the updated transaction metadata.\n   *\n   * @example\n   * const response = await integrationSdk.transactions.updateMetadata({\n   *   id: 'transaction-id',\n   *   metadata: { key: 'value' },\n   * });\n   *\n   * const updatedMetadata = response.data;\n   */\n  async updateMetadata<P extends TransactionsUpdateMetadataParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams: EP | void\n  ): Promise<AxiosResponse<TransactionsResponse<'updateMetadata', P, EP>>> {\n    return this.axios.post<TransactionsResponse<'updateMetadata', P, EP>>(\n      `${this.endpoint}/update_metadata`,\n      {...params, ...extraParams},\n      this.headers\n    );\n  }\n}\n\nexport default Transactions;\n","/**\n * @fileoverview Provides the Users class for managing user data in the Sharetribe Integration API.\n * This class allows retrieving details about a specific user.\n *\n * For more details, refer to the Integration API documentation:\n * https://www.sharetribe.com/api-reference/integration.html#users\n */\n\nimport {AxiosInstance, AxiosResponse} from 'axios';\nimport IntegrationApi from './index';\nimport {\n  UsersApproveParameter,\n  UsersQueryParameter,\n  UsersResponse,\n  UsersShowParameter, UsersUpdatePermissionsParameter,\n  UsersUpdateProfileParameter\n} from '../../types/marketplace/user';\nimport {ExtraParameter} from \"../../types/sharetribe\";\n\n/**\n * Class representing the Users API.\n *\n * The Users API provides methods to retrieve user data for marketplace resources.\n */\nclass Users {\n  private readonly endpoint: string;\n  private readonly axios: AxiosInstance;\n  private readonly headers: Record<string, string>;\n\n  /**\n   * Creates an instance of the Users class.\n   *\n   * @param {IntegrationApi} api - The Integration API instance providing configuration and request handling.\n   */\n  constructor(api: IntegrationApi) {\n    this.endpoint = api.endpoint + '/users';\n    this.axios = api.axios;\n    this.headers = api.headers;\n  }\n\n  /**\n   * Retrieves details about a specific user.\n   *\n   * @template P\n   * @param {P & UsersShowParameter} params - The parameters to identify the user.\n   * @returns {Promise<AxiosResponse<UsersResponse<'show', P>>>} - A promise resolving to the user details.\n   *\n   * @example\n   * const response = await integrationSdk.users.show({\n   *   id: 'user-id',\n   * });\n   *\n   * const userDetails = response.data;\n   */\n  async show<P extends UsersShowParameter<true>>(\n    params: P\n  ): Promise<AxiosResponse<UsersResponse<'show', P>>> {\n    if (!params.id && !params.email) {\n      throw new Error(\"Either 'id' or 'email' must be provided.\");\n    }\n\n    return this.axios.get<UsersResponse<'show', P>>(`${this.endpoint}/show`, {\n      ...this.headers,\n      params,\n    });\n  }\n\n  /**\n   * Queries users based on specified filters.\n   *\n   * @template P\n   * @param {P & UsersQueryParameter} params - Query parameters for filtering users.\n   * @returns {Promise<AxiosResponse<UsersResponse<'query', P>>>} - A promise resolving to the list of users.\n   *\n   * @example\n   * const response = await integrationSdk.users.query({\n   *   createdAtStart: '2021-01-01T00:00:00Z'\n   * });\n   * const users = response.data;\n   */\n  async query<P extends UsersQueryParameter>(\n    params: P\n  ): Promise<AxiosResponse<UsersResponse<'query', P>>> {\n    return this.axios.get<UsersResponse<'query', P>>(`${this.endpoint}/query`, {\n      headers: this.headers,\n      params,\n    });\n  }\n\n  /**\n   * Updates a user's profile.\n   *\n   * @template P\n   * @template EP\n   * @param {P & UsersUpdateProfileParameter} params - Parameters to update the user's profile.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<UsersResponse<'updateProfile', P, EP>>>} - A promise resolving to the updated profile details.\n   *\n   * @example\n   * const response = await integrationSdk.users.updateProfile({\n   *   id: 'user-id',\n   *   firstName: 'John',\n   *   lastName: 'Doe',\n   *   displayName: 'John Doe',\n   * });\n   * const updatedProfile = response.data;\n   */\n  async updateProfile<P extends UsersUpdateProfileParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams?: EP\n  ): Promise<AxiosResponse<UsersResponse<'updateProfile', P, EP>>> {\n    return this.axios.post<UsersResponse<'updateProfile', P, EP>>(\n      `${this.endpoint}/update_profile`,\n      { ...params, ...extraParams },\n      { headers: this.headers }\n    );\n  }\n\n  /**\n   * Approves a user.\n   *\n   * @template P\n   * @template EP\n   * @param {P & UsersApproveParameter} params - Parameters to approve the user.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<UsersResponse<'approve', P>>>} - A promise resolving to the approval confirmation.\n   *\n   * @example\n   * const response = await integrationSdk.users.approve({ id: 'user-id' });\n   * const approvalResult = response.data;\n   */\n  async approve<P extends UsersApproveParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams?: EP\n  ): Promise<AxiosResponse<UsersResponse<'approve', P, EP>>> {\n    return this.axios.post<UsersResponse<'approve', P, EP>>(`${this.endpoint}/approve`, { ...params, ...extraParams }, {\n      headers: this.headers,\n    });\n  }\n\n  /**\n   * Updates a user's permissions.\n   *\n   * @template P\n   * @template EP\n   * @param {P & UsersUpdatePermissionsParameter} params - Parameters to update the user's permissions.\n   * @param {EP | void} extraParams - Optional extra parameters for the request.\n   * @returns {Promise<AxiosResponse<UsersResponse<'updatePermissions', P, EP>>>} - A promise resolving to the updated permissions details.\n   *\n   * @example\n   * const response = await integrationSdk.users.updatePermissions(\n   *   { id: 'user-id', permissions: ['permission-1', 'permission-2'] },\n   *   { additionalParam: 'value' }\n   * );\n   * const updatedPermissions = response.data;\n   */\n  async updatePermissions<P extends UsersUpdatePermissionsParameter, EP extends ExtraParameter>(\n    params: P,\n    extraParams?: EP\n  ): Promise<AxiosResponse<UsersResponse<'updatePermissions', P, EP>>> {\n    return this.axios.post<UsersResponse<'updatePermissions', P, EP>>(\n      `${this.endpoint}/update_permissions`,\n      { ...params, ...extraParams },\n      { headers: this.headers }\n    );\n  }\n}\n\nexport default Users;\n","/**\n * @fileoverview Provides the IntegrationApi class for accessing various endpoints of the Sharetribe Integration API.\n * This class acts as a gateway to multiple sub-APIs, including availability exceptions, events, images, listings, stock, transactions, and users.\n */\n\nimport {AxiosInstance} from \"axios\";\nimport IntegrationSdk from \"../../integrationSdk\";\nimport AvailabilityExceptions from \"./AvailabilityExceptions\";\nimport Events from \"./Events\";\nimport Images from \"./Images\";\nimport Listings from \"./Listings\";\nimport Marketplace from \"./Marketplace\";\nimport Stock from \"./Stock\";\nimport StockAdjustments from \"./StockAdjustments\";\nimport StockReservation from \"./StockReservation\";\nimport Transactions from \"./Transactions\";\nimport Users from \"./Users\";\n\n/**\n * Class representing the Sharetribe Integration API.\n *\n * This class provides access to various sub-APIs for managing marketplace resources such as availability exceptions,\n * events, images, listings, stock, transactions, and users.\n *\n * @example\n * const sdk = new IntegrationSdk(sdkConfig);\n * const integrationApi = new IntegrationApi(sdk);\n *\n * // Example: Query availability exceptions\n * const response = await integrationApi.availabilityExceptions.query({\n *   resource_id: 'resource-id',\n *   start: '2024-12-01T00:00:00Z',\n *   end: '2024-12-31T23:59:59Z'\n * });\n *\n * const exceptions = response.data;\n */\nclass IntegrationApi {\n  axios: AxiosInstance;\n  endpoint: string;\n  headers: Record<string, string>;\n  authRequired: boolean;\n\n  // API Endpoints\n  availabilityExceptions: AvailabilityExceptions;\n  events: Events;\n  images: Images;\n  listings: Listings;\n  marketplace: Marketplace;\n  stock: Stock;\n  stockAdjustments: StockAdjustments;\n  stockReservations: StockReservation;\n  transactions: Transactions;\n  users: Users;\n\n  /**\n   * Creates an instance of the IntegrationApi class.\n   *\n   * @param {IntegrationSdk} sdk - The Integration SDK instance providing configuration and request handling.\n   */\n  constructor(sdk: IntegrationSdk) {\n    const config = sdk.apisConfigs.integrationApi(sdk.sdkConfig);\n    this.endpoint = config.baseUrl;\n    this.headers = config.headers;\n    this.axios = sdk.axios;\n    this.authRequired = false;\n\n    this.availabilityExceptions = new AvailabilityExceptions(this);\n    this.events = new Events(this);\n    this.images = new Images(this);\n    this.listings = new Listings(this);\n    this.marketplace = new Marketplace(this);\n    this.stock = new Stock(this);\n    this.stockAdjustments = new StockAdjustments(this);\n    this.stockReservations = new StockReservation(this);\n    this.transactions = new Transactions(this);\n    this.users = new Users(this);\n  }\n}\n\nexport default IntegrationApi;\n","import {SdkConfig} from './types/config';\nimport axios, { AxiosInstance } from 'axios';\nimport {ApiConfigs} from \"./types/apiConfigs\";\nimport IntegrationApi from \"./endpoints/integrationApi\";\nimport {createApisConfigs} from \"./utils/apis\";\nimport prepareAxiosInstance from \"./utils/prepare-axios-instance\";\nimport AuthenticationApi from \"./endpoints/auth\";\nimport AvailabilityExceptions from \"./endpoints/integrationApi/AvailabilityExceptions\";\nimport Events from \"./endpoints/integrationApi/Events\";\nimport Images from \"./endpoints/integrationApi/Images\";\nimport Listings from \"./endpoints/integrationApi/Listings\";\nimport Marketplace from \"./endpoints/integrationApi/Marketplace\";\nimport Stock from \"./endpoints/integrationApi/Stock\";\nimport StockAdjustments from \"./endpoints/integrationApi/StockAdjustments\";\nimport StockReservation from \"./endpoints/integrationApi/StockReservation\";\nimport Transactions from \"./endpoints/integrationApi/Transactions\";\nimport Users from \"./endpoints/integrationApi/Users\";\nimport {DefaultSdkConfig} from \"./utils/config\";\n\n/**\n * The main Sharetribe Integration SDK for interacting with the Sharetribe Integration API.\n *\n * @class\n */\nclass SharetribeIntegrationSdk {\n  /**\n   * Configuration for the SDK.\n   *\n   * @type {SdkConfig}\n   */\n  sdkConfig: SdkConfig;\n\n  /**\n   * Configuration for the API endpoints.\n   *\n   * @type {ApiConfigs<true>}\n   */\n  apisConfigs: ApiConfigs<true>;\n\n  /**\n   * Axios instance used for making API requests.\n   *\n   * @type {AxiosInstance}\n   */\n  axios: AxiosInstance;\n\n  // Endpoints\n  /**\n   * Endpoint for handling authentication.\n   *\n   * @type {AuthenticationApi}\n   */\n  auth: AuthenticationApi;\n\n  /**\n   * Main integration API.\n   *\n   * @type {IntegrationApi}\n   */\n  integration_api: IntegrationApi;\n\n  // API Endpoints\n  /**\n   * Endpoint for managing availability exceptions.\n   *\n   * @type {AvailabilityExceptions}\n   */\n  availabilityExceptions: AvailabilityExceptions;\n\n  /**\n   * Endpoint for retrieving and managing events.\n   *\n   * @type {Events}\n   */\n  events: Events;\n\n  /**\n   * Endpoint for handling image-related operations.\n   *\n   * @type {Images}\n   */\n  images: Images;\n\n  /**\n   * Endpoint for managing listings.\n   *\n   * @type {Listings}\n   */\n  listings: Listings;\n\n  /**\n   * Endpoint for accessing marketplace details.\n   *\n   * @type {Marketplace}\n   */\n  marketplace: Marketplace;\n\n  /**\n   * Endpoint for managing stock.\n   *\n   * @type {Stock}\n   */\n  stock: Stock;\n\n  /**\n   * Endpoint for handling stock adjustments.\n   *\n   * @type {StockAdjustments}\n   */\n  stockAdjustments: StockAdjustments;\n\n  /**\n   * Endpoint for managing stock reservations.\n   *\n   * @type {StockReservation}\n   */\n  stockReservations: StockReservation;\n\n  /**\n   * Endpoint for managing transactions.\n   *\n   * @type {Transactions}\n   */\n  transactions: Transactions;\n\n  /**\n   * Endpoint for managing user data.\n   *\n   * @type {Users}\n   */\n  users: Users;\n\n  /**\n   * Initializes a new instance of the SharetribeIntegrationSdk class.\n   *\n   * @constructor\n   * @param {SdkConfig} config - The configuration object for the SDK.\n   */\n  constructor(config: SdkConfig) {\n    this.sdkConfig = {\n      ...DefaultSdkConfig,\n      ...config,\n    };\n\n    this.apisConfigs = createApisConfigs(true);\n    this.axios = axios.create({\n      baseURL: `${this.sdkConfig.baseUrl}/${this.sdkConfig.version}/`,\n    });\n    prepareAxiosInstance(this);\n\n    this.auth = new AuthenticationApi(this);\n    this.integration_api = new IntegrationApi(this);\n\n    // Api Endpoints\n    this.availabilityExceptions = this.integration_api.availabilityExceptions;\n    this.events = this.integration_api.events;\n    this.images = this.integration_api.images;\n    this.listings = this.integration_api.listings;\n    this.marketplace = this.integration_api.marketplace;\n    this.stock = this.integration_api.stock;\n    this.stockAdjustments = this.integration_api.stockAdjustments;\n    this.stockReservations = this.integration_api.stockReservations;\n    this.transactions = this.integration_api.transactions;\n    this.users = this.integration_api.users;\n  }\n}\n\nexport default SharetribeIntegrationSdk;\n\n","/*! js-cookie v3.0.5 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (name, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    name = encodeURIComponent(name)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      name + '=' + converter.write(value, name) + stringifiedAttributes)\n  }\n\n  function get (name) {\n    if (typeof document === 'undefined' || (arguments.length && !name)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var found = decodeURIComponent(parts[0]);\n        jar[found] = converter.read(value, found);\n\n        if (name === found) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return name ? jar[name] : jar\n  }\n\n  return Object.create(\n    {\n      set,\n      get,\n      remove: function (name, attributes) {\n        set(\n          name,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\nexport { api as default };\n","/**\n * Generates a unique key for storing tokens.\n *\n * @param clientId - The unique identifier for the client.\n * @param namespace - The namespace to organize and scope the key.\n * @returns A string combining the namespace, client ID, and a token suffix.\n */\nexport const generateKey = (clientId: string, namespace: string): string => {\n  return `${namespace}-${clientId}-token`;\n};\n","/**\n * A collection of utilities, SDKs, and types provided by the Sharetribe SDK.\n *\n * @module SharetribeSdkExports\n */\n\nimport sharetribeSdk from './sdk';\nimport integrationSdk from './integrationSdk';\nimport BigDecimal from \"./sdkTypes/BigDecimal\";\nimport UUID from \"./sdkTypes/UUID\";\nimport LatLng from \"./sdkTypes/LatLng\";\nimport LatLngBounds from \"./sdkTypes/LatLngBounds\";\nimport Money from \"./sdkTypes/Money\";\nimport MemoryStore from \"./utils/stores/memory-store\";\nimport BrowserStore from \"./utils/stores/browser-store\";\nimport ExpressStore from \"./utils/stores/express-store\";\nimport {objectQueryString, transitToJson} from \"./utils/util\";\nimport {toSdkTypes} from \"./utils/convert-types\";\n\n/**\n * SDK-specific types provided for advanced usage.\n */\nexport const sdkTypes = {\n  /** A representation of a high-precision decimal number. */\n  BigDecimal,\n  /** A geographical point with latitude and longitude. */\n  LatLng,\n  /** A bounding box defined by northeast and southwest geographical points. */\n  LatLngBounds,\n  /** A monetary value with an amount and currency. */\n  Money,\n  /** A universally unique identifier (UUID). */\n  UUID,\n};\n\n/**\n * Token store implementations for managing authentication tokens.\n */\nexport const TokenStore = {\n  /** In-memory token store for temporary token management. */\n  MemoryStore,\n  /** Browser token store using cookies. */\n  BrowserStore,\n  /** Express.js-compatible token store using request and response cookies. */\n  ExpressStore,\n};\n\n/**\n * Utility functions for data manipulation.\n */\nexport const util = {\n  /** Serializes an object into a custom query string format. */\n  objectQueryString,\n  /** Converts a value based on _sdkType property to a SDK type. */\n  transitToJson,\n};\n\n/**\n * The main Sharetribe SDK for interacting with the Sharetribe API.\n */\nexport const SharetribeSdk = sharetribeSdk;\n\n/**\n * The Integration SDK for interacting with the Sharetribe Integration API.\n */\nexport const IntegrationSdk = integrationSdk;\n\nexport default {\n  /** Export of the Sharetribe SDK. */\n  SharetribeSdk: sharetribeSdk,\n  /** Export of the Integration SDK. */\n  IntegrationSdk: integrationSdk,\n  /** Export of available token stores. */\n  TokenStore,\n  /** Export of SDK-specific types. */\n  sdkTypes,\n  /** Export of utility functions. */\n  util,\n};\n","/**\n * Class representing a high-precision decimal number.\n *\n * The BigDecimal class ensures that large decimal numbers are stored as strings\n * to avoid precision loss during computations.\n */\nclass BigDecimal {\n  value: string;\n  readonly _sdkType: 'BigDecimal';\n\n  /**\n   * Creates an instance of the BigDecimal class.\n   *\n   * @param {any} value - The value to be stored as a BigDecimal. It must be convertible to a string.\n   * @example\n   * const bigDecimal = new BigDecimal('123456789.123456789');\n   */\n  constructor(value: any) {\n    this._sdkType = 'BigDecimal';\n\n    if (typeof value !== 'string') {\n      console.warn(\"BigDecimal must be initialized with a string to ensure precision.\");\n    }\n    // Convert the value to a string to maintain compatibility and precision.\n    this.value = String(value);\n  }\n\n  /**\n   * Converts the BigDecimal instance to a string representation.\n   *\n   * @returns {string} - The string representation of the BigDecimal.\n   * @example\n   * const bigDecimal = new BigDecimal('123456789.123456789');\n   * console.log(bigDecimal.toString()); // Outputs: '123456789.123456789'\n   */\n  toString(): string {\n    return `${this.value}`;\n  }\n}\n\nexport default BigDecimal;\n","import Cookies from 'js-cookie';\nimport { generateKey } from './store';\nimport { AuthToken, TokenStore } from '../../types/store';\n\n/**\n * Configuration options for the `BrowserStore`.\n */\nexport type BrowserStoreOptions = {\n  clientId: string; // Unique identifier for the client\n  secure?: boolean; // Whether to use secure cookies (HTTPS only)\n};\n\n/**\n * `BrowserStore` is an implementation of the `TokenStore` interface for storing authentication tokens in browser cookies.\n */\nclass BrowserStore implements TokenStore {\n  expiration: number = 30; // Default cookie expiration in days\n  private namespace: string = 'st'; // Namespace for cookie keys\n  private readonly key: string; // Generated key for the cookie\n  private readonly secure: boolean | undefined; // Indicates if cookies should be marked as secure\n\n  /**\n   * Initializes the `BrowserStore` with client-specific options.\n   * @param options - Configuration options for the store.\n   */\n  constructor({ clientId, secure }: BrowserStoreOptions) {\n    this.secure = secure;\n    this.key = generateKey(clientId, this.namespace);\n  }\n\n  /**\n   * Retrieves the authentication token from browser cookies.\n   * @returns A promise that resolves to the `AuthToken` or null if no token exists.\n   */\n  async getToken(): Promise<AuthToken | null> {\n    const cookie = Cookies.get(this.key);\n    return cookie ? (JSON.parse(cookie) as AuthToken) : null;\n  }\n\n  /**\n   * Stores the authentication token in a browser cookie.\n   * @param token - The authentication token to store.\n   */\n  setToken(token: AuthToken): void {\n    const secureFlag = this.secure ? { secure: true } : {};\n    Cookies.set(this.key, JSON.stringify(token), { expires: this.expiration, ...secureFlag });\n  }\n\n  /**\n   * Removes the authentication token from browser cookies.\n   */\n  removeToken(): void {\n    Cookies.remove(this.key);\n  }\n}\n\nexport default BrowserStore;\n","import { Request, Response } from 'express';\nimport { generateKey } from './store';\nimport { AuthToken, TokenStore } from '../../types/store';\n\n/**\n * Configuration options for the `ExpressStore`.\n */\nexport type ExpressStoreOptions = {\n  clientId: string; // Unique identifier for the client\n  req: Request; // Express request object\n  res: Response; // Express response object\n  secure?: boolean; // Whether to use secure cookies (HTTPS only)\n};\n\n/**\n * `ExpressStore` is an implementation of the `TokenStore` interface for managing authentication tokens via cookies in an Express application.\n */\nclass ExpressStore implements TokenStore {\n  expiration: number = 180; // Default cookie expiration in days\n  private namespace: string = 'st'; // Namespace for cookie keys\n  private key: string; // Generated key for the cookie\n  private secure: boolean | undefined; // Indicates if cookies should be marked as secure\n  private req: Request; // Reference to the Express request object\n  private res: Response; // Reference to the Express response object\n  private currentToken: AuthToken | null = null; // Cached token\n\n  /**\n   * Initializes the `ExpressStore` with client-specific options.\n   * @param options - Configuration options for the store.\n   */\n  constructor({ clientId, req, res, secure }: ExpressStoreOptions) {\n    this.key = generateKey(clientId, this.namespace);\n    this.secure = secure;\n    this.req = req;\n    this.res = res;\n  }\n\n  /**\n   * Reads the authentication token from the request cookies.\n   * @returns The `AuthToken` if present in cookies, otherwise null.\n   */\n  private readCookie(): AuthToken | null {\n    const cookie = this.req.cookies[this.key];\n    return cookie ? (JSON.parse(cookie) as AuthToken) : null;\n  }\n\n  /**\n   * Retrieves the authentication token, either from cache or from the request cookies.\n   * @returns A promise that resolves to the `AuthToken` or null if no token exists.\n   */\n  async getToken(): Promise<AuthToken | null> {\n    this.currentToken = this.currentToken || this.readCookie();\n    return this.currentToken;\n  }\n\n  /**\n   * Stores the authentication token in a response cookie.\n   * @param token - The authentication token to store.\n   */\n  setToken(token: AuthToken): void {\n    this.currentToken = token;\n    const secureFlag = this.secure ? { secure: true } : {};\n    this.res.cookie(this.key, JSON.stringify(token), {\n      maxAge: 1000 * 60 * 60 * 24 * this.expiration, // Convert expiration to milliseconds\n      httpOnly: true, // Ensures cookie is only accessible via HTTP(S)\n      ...secureFlag,\n    });\n  }\n\n  /**\n   * Removes the authentication token from the response cookies.\n   */\n  removeToken(): void {\n    this.currentToken = null;\n    this.res.clearCookie(this.key);\n  }\n}\n\nexport default ExpressStore;\n","type ObjectQueryStringParam = Record<string, any>;\n\n/**\n * Serializes an attribute into a string representation for query parameters.\n *\n * @param {*} attribute - The attribute to serialize. Supported types:\n *   - `Array`: serialized as a comma-separated string of its elements.\n *   - Other types: returned as-is.\n * @returns {string} The serialized attribute.\n */\nconst serializeAttribute = (attribute: any): string => {\n  if (Array.isArray(attribute)) {\n    return attribute.join(',');\n  } else {\n    return attribute;\n  }\n};\n\n/**\n * Serializes an object into a custom query string format.\n *\n * @param {ObjectQueryStringParam} obj - The object to serialize. Each key-value pair\n *   is serialized in the format `key:value`. Attributes are processed using\n *   `serializeAttribute`.\n * @throws {Error} If the input is not an object or is null.\n * @returns {string} A semicolon-separated query string.\n */\nexport const objectQueryString = (obj: ObjectQueryStringParam): string => {\n  // Ensure the input is a valid object\n  if (obj === null || typeof obj !== 'object' || Array.isArray(obj)) {\n    console.warn(\"Params must be an object\");\n    // You can throw an error instead of warning if strict validation is required:\n    // throw new Error(\"Params must be an object\");\n    return '';\n  }\n\n  return Object.entries(obj)\n    .filter(([_, value]) => value !== undefined && value !== null) // Exclude undefined or null values\n    .map(([key, value]) => `${key}:${serializeAttribute(value)}`) // Serialize each key-value pair\n    .join(';'); // Join the serialized pairs with semicolons\n};\n\nexport const transitToJson = (transitString: string) => {\n  // Parse the transit string into an object\n  const transitObj = JSON.parse(transitString);\n\n  // Recursive function to normalize the transit object\n  function normalizeTransit(obj: any): any {\n    if (Array.isArray(obj)) {\n      // Normalize each item in the array\n      return obj.map(normalizeTransit);\n    } else if (typeof obj === \"object\" && obj !== null) {\n      // Normalize each key and value in the object\n      return Object.keys(obj).reduce((acc: any, key) => {\n        const normalizedKey = key.startsWith(\"~:\") ? key.slice(2) : key;\n        acc[normalizedKey] = normalizeTransit(obj[key]);\n        return acc;\n      }, {});\n    }\n    // Return the value directly if it's not an array or object\n    return obj;\n  }\n\n  // Normalize the transit object\n  return normalizeTransit(transitObj);\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","createApisConfigs","isIntegrationSdk","api","baseUrl","version","transitVerbose","headers","Accept","auth","assets","assetCdnBaseUrl","integrationApi","bind","fn","thisArg","apply","arguments","toString","getPrototypeOf","kindOf","cache","create","thing","str","slice","toLowerCase","kindOfTest","type","typeOfTest","isArray","Array","isUndefined","isArrayBuffer","isString","isFunction","isNumber","isObject","isPlainObject","val","iterator","isDate","isFile","isBlob","isFileList","isURLSearchParams","isReadableStream","isRequest","isResponse","isHeaders","map","forEach","allOwnKeys","i","l","length","keys","getOwnPropertyNames","len","findKey","_key","_global","globalThis","self","window","global","isContextDefined","context","isTypedArray","TypedArray","Uint8Array","isHTMLForm","isRegExp","reduceDescriptors","reducer","descriptors","getOwnPropertyDescriptors","reducedDescriptors","descriptor","name","ret","defineProperties","ALPHA","DIGIT","ALPHABET","ALPHA_DIGIT","toUpperCase","isAsyncFn","_setImmediate","setImmediateSupported","setImmediate","postMessageSupported","postMessage","token","Math","random","callbacks","addEventListener","source","data","shift","cb","push","setTimeout","asap","queueMicrotask","process","nextTick","isBuffer","constructor","isFormData","kind","FormData","append","isArrayBufferView","result","ArrayBuffer","isView","buffer","isBoolean","isStream","pipe","merge","caseless","this","assignValue","targetKey","extend","a","b","trim","replace","stripBOM","content","charCodeAt","inherits","superConstructor","props","assign","toFlatObject","sourceObj","destObj","filter","propFilter","merged","endsWith","searchString","position","String","undefined","lastIndex","indexOf","toArray","arr","forEachEntry","next","done","pair","matchAll","regExp","matches","exec","hasOwnProp","freezeMethods","writable","set","Error","toObjectSet","arrayOrString","delimiter","define","split","toCamelCase","m","p1","p2","noop","toFiniteNumber","defaultValue","Number","isFinite","generateString","size","alphabet","isSpecCompliantForm","toJSONObject","stack","visit","target","reducedValue","isThenable","then","catch","AxiosError","message","code","config","request","response","captureStackTrace","status","utils","toJSON","description","number","fileName","lineNumber","columnNumber","from","error","customProps","axiosError","cause","isVisitable","removeBrackets","renderKey","path","dots","concat","join","predicates","test","formData","options","TypeError","metaTokens","indexes","option","visitor","defaultVisitor","useBlob","Blob","convertValue","toISOString","Buffer","JSON","stringify","some","isFlatArray","el","index","exposedHelpers","build","pop","encode","charMap","encodeURIComponent","match","AxiosURLSearchParams","params","_pairs","encoder","_encode","buildURL","url","serialize","serializeFn","serializedParams","hashmarkIndex","handlers","use","fulfilled","rejected","synchronous","runWhen","eject","id","clear","h","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","isBrowser","classes","URLSearchParams","protocols","hasBrowserEnv","document","_navigator","navigator","hasStandardBrowserEnv","product","hasStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","origin","location","href","buildPath","isNumericKey","isLast","arrayToObject","entries","parsePropPath","defaults","transitional","adapter","transformRequest","contentType","getContentType","hasJSONContentType","isObjectPayload","setContentType","platform","helpers","isNode","toURLEncodedForm","formSerializer","_FormData","env","rawValue","parse","e","stringifySafely","transformResponse","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","method","ignoreDuplicateOf","$internals","normalizeHeader","header","normalizeValue","matchHeaderValue","isHeaderNameFilter","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","setHeaders","rawHeaders","parsed","line","substring","parseHeaders","parser","tokens","tokensRE","parseTokens","has","matcher","deleted","deleteHeader","normalize","format","normalized","w","char","formatHeader","targets","asStrings","first","computed","accessor","accessors","defineAccessor","accessorName","methodName","arg1","arg2","arg3","configurable","buildAccessors","mapped","headerValue","transformData","fns","isCancel","__CANCEL__","CanceledError","ERR_CANCELED","settle","resolve","reject","ERR_BAD_REQUEST","floor","progressEventReducer","listener","isDownloadStream","freq","bytesNotified","_speedometer","samplesCount","min","bytes","timestamps","firstSampleTS","head","tail","chunkLength","now","Date","startedAt","bytesCount","passed","round","lastArgs","timer","timestamp","threshold","invoke","args","clearTimeout","loaded","total","lengthComputable","progressBytes","rate","progress","estimated","event","progressEventDecorator","throttled","asyncDecorator","isMSIE","URL","protocol","host","port","userAgent","write","expires","domain","secure","cookie","toGMTString","read","RegExp","decodeURIComponent","remove","buildFullPath","baseURL","requestedURL","relativeURL","combineURLs","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","paramsSerializer","timeoutMessage","withCredentials","withXSRFToken","onUploadProgress","onDownloadProgress","decompress","beforeRedirect","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding","configValue","newConfig","btoa","username","password","unescape","Boolean","isURLSameOrigin","xsrfValue","cookies","XMLHttpRequest","Promise","_config","resolveConfig","requestData","requestHeaders","onCanceled","uploadThrottled","downloadThrottled","flushUpload","flushDownload","unsubscribe","signal","removeEventListener","onloadend","responseHeaders","getAllResponseHeaders","err","responseText","statusText","open","onreadystatechange","readyState","responseURL","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","setRequestHeader","upload","cancel","abort","subscribe","aborted","parseProtocol","send","signals","controller","AbortController","reason","streamChunk","chunk","chunkSize","byteLength","end","pos","trackStream","stream","onProgress","onFinish","async","iterable","asyncIterator","reader","getReader","readStream","readBytes","_onFinish","ReadableStream","pull","close","loadedBytes","enqueue","return","highWaterMark","isFetchSupported","fetch","Request","Response","isReadableStreamSupported","encodeText","TextEncoder","arrayBuffer","supportsRequestStream","duplexAccessed","hasContentType","body","duplex","supportsResponseStream","resolvers","res","_","ERR_NOT_SUPPORT","knownAdapters","http","xhr","fetchOptions","composedSignal","toAbortSignal","requestContentLength","getContentLength","_request","getBodyLength","resolveBodyLength","contentTypeHeader","flush","isCredentialsSupported","credentials","isStreamResponse","responseContentLength","responseData","renderReason","isResolvedHandle","adapters","nameOrAdapter","rejectedReasons","reasons","state","s","throwIfCancellationRequested","throwIfRequested","dispatchRequest","validators","deprecatedWarnings","validator","formatMessage","opt","desc","opts","ERR_DEPRECATED","console","warn","spelling","correctSpelling","assertOptions","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","Axios","instanceConfig","interceptors","configOrUrl","dummy","boolean","function","withXsrfToken","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","unshift","responseInterceptorChain","promise","chain","onFulfilled","onRejected","getUri","generateHTTPMethod","isForm","CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","splice","c","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","axios","createInstance","defaultConfig","instance","VERSION","toFormData","Cancel","all","promises","spread","callback","isAxiosError","payload","formToJSON","getAdapter","default","endpoint","sdk","apisConfigs","sdkConfig","post","authWithIdp","revoke","details","authRequired","query","extraParams","show","createWithIdp","updateProfile","changePassword","changeEmail","verifyEmail","sendVerificationEmail","createStripeAccount","updateStripeAccount","createDraft","update","publishDraft","discardDraft","addImage","reset","compareAndSet","addPaymentMethod","deletePaymentMethod","initiate","initiateSpeculative","transition","transitionSpeculative","availabilityExceptions","bookings","currentUser","images","listings","marketplace","messages","ownListings","passwordReset","processTransitions","reviews","stock","stockAdjustments","stripeAccount","stripeAccountLinks","stripeCustomer","stripePersons","stripeSetupIntents","timeslots","transactions","users","randomUUID","crypto","getRandomValues","rnds8","rng","byteToHex","buf","offset","rnds","unsafeStringify","uuid","_sdkType","lat","lng","isNumberOrNumberString","ne","sw","isValid","isLatLngObject","neLatLng","swLatLng","serializeValue","v","amount","currency","isInteger","convertToMoney","convertToLatLng","recursiveConvertToSdkTypes","includes","convertToDate","convertTypes","recursiveConvertFromSdkTypes","convertFromSdkTypes","recursiveApplyHandler","handler","QUERY_PARAMETERS","prepareAuthorizationHeader","token_type","access_token","handleRequestSuccess","requestConfig","grant_type","scope","Authorization","authToken","tokenStore","getToken","client_id","clientId","find","param","startsWith","typeHandlers","sdkType","appType","writer","canHandle","typeToData","setToken","revoked","removeToken","dataToType","handleResponseSuccess","originalRequest","requestUrl","found","lastIndexOf","routeNeedsTrustedUser","isTokenExpired","_retry","refresh_token","handleResponseFailure","extractCommonPathAndAssets","paths","commonPath","prefix","asset","assetByAlias","alias","assetsByAlias","assetByVersion","assetsByVersion","DefaultSdkConfig","assetsApi","login","loginWithIdp","clientSecret","client_secret","logout","exchangeToken","subject_token","authInfo","storedToken","tokenScope","scopes","isAnonymous","grantType","approve","updateMetadata","email","updatePermissions","events","stockReservations","integration_api","init","converter","defaultAttributes","attributes","toUTCString","escape","stringifiedAttributes","attributeName","jar","parts","withAttributes","withConverter","freeze","generateKey","namespace","sdkTypes","BigDecimal","LatLng","LatLngBounds","Money","UUID","TokenStore","MemoryStore","BrowserStore","expiration","secureFlag","ExpressStore","req","currentToken","readCookie","maxAge","httpOnly","clearCookie","util","objectQueryString","attribute","transitToJson","transitString","normalizeTransit","reduce","acc","IntegrationSdk","integrationSdk","SharetribeSdk"],"sourceRoot":""}